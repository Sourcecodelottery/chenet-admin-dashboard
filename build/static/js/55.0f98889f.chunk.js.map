{"version":3,"sources":["components/PageTitleWrapper/index.tsx","components/Footer/index.tsx","components/PageTitle/index.tsx","content/pages/Components/Forms/index.tsx"],"names":["PageTitle","styled","Box","theme","spacing","PageTitleWrapper","children","maxWidth","FooterWrapper","Footer","py","display","xs","md","alignItems","textAlign","justifyContent","variant","sx","pt","href","target","rel","heading","subHeading","docs","noButton","rest","container","item","component","gutterBottom","mt","startIcon","fontSize","label","inputProps","currencies","value","Forms","useState","currency","setCurrency","handleChange","event","setValue","direction","title","m","width","noValidate","autoComplete","required","id","defaultValue","disabled","type","InputProps","readOnly","InputLabelProps","shrink","helperText","select","onChange","map","option","SelectProps","native","defaultChecked","color","pink","my","row","name","control","mb","newValue"],"mappings":"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","file":"static/js/55.0f98889f.chunk.js","sourcesContent":["import { FC, ReactNode } from 'react';\nimport { Container } from '@mui/material';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/material/styles';\nimport { Box } from '@mui/material';\n\nconst PageTitle = styled(Box)(\n  ({ theme }) => `\n        padding: ${theme.spacing(4, 0)};\n`\n);\n\ninterface PageTitleWrapperProps {\n  children?: ReactNode;\n}\n\nconst PageTitleWrapper: FC<PageTitleWrapperProps> = ({ children }) => {\n  return (\n    <>\n      <PageTitle>\n        <Container maxWidth=\"lg\">\n          {children}\n        </Container>\n      </PageTitle>\n    </>\n  );\n};\n\nPageTitleWrapper.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default PageTitleWrapper;\n","import { Box, Container, Link, Typography } from '@mui/material';\nimport { styled } from '@mui/material/styles';\n\nconst FooterWrapper = styled(Box)(\n  ({ theme }) => `\n        border-radius: 0;\n        margin: ${theme.spacing(3)} 0;\n`\n);\n\nfunction Footer() {\n  return (\n    <FooterWrapper>\n      <Container maxWidth=\"lg\">\n        <Box\n          py={3}\n          display={{ xs: 'block', md: 'flex' }}\n          alignItems=\"center\"\n          textAlign={{ xs: 'center', md: 'left' }}\n          justifyContent=\"space-between\"\n        >\n          <Box>\n            <Typography variant=\"subtitle1\">\n              &copy; 2021 - Tokyo Free White React Admin Dashboard\n            </Typography>\n          </Box>\n          <Typography sx={{ pt: { xs: 2, md: 0 } }} variant=\"subtitle1\">\n            Crafted by <Link href=\"https://bloomui.com\" target=\"_blank\" rel=\"noopener noreferrer\">BloomUI.com</Link>\n          </Typography>\n        </Box>\n      </Container>\n    </FooterWrapper>\n  );\n}\n\nexport default Footer;\n","import { FC } from 'react';\nimport PropTypes from 'prop-types';\nimport AddTwoToneIcon from '@mui/icons-material/AddTwoTone';\nimport { Typography, Button, Grid } from '@mui/material';\n\ninterface PageTitleProps {\n    heading?: string;\n    subHeading?: string;\n    docs?: string;\n    noButton?: boolean;\n}\n\nconst PageTitle: FC<PageTitleProps> = ({\n    heading = '',\n    subHeading = '',\n    docs = '',\n    noButton = false,\n    ...rest\n}) => {\n    return (\n        <Grid container justifyContent=\"space-between\" alignItems=\"center\" {...rest}>\n            <Grid item>\n                <Typography variant=\"h3\" component=\"h3\" gutterBottom>\n                    {heading}\n                </Typography>\n                <Typography variant=\"subtitle2\">\n                    {subHeading}\n                </Typography>\n            </Grid>\n            {!noButton && <Grid item>\n                <Button\n                    href={docs}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    sx={{ mt: { xs: 2, md: 0 } }}\n                    variant=\"contained\"\n                    startIcon={<AddTwoToneIcon fontSize=\"small\" />}\n                >\n                    {heading}\n                </Button>\n            </Grid>}\n        </Grid>\n    );\n};\n\nPageTitle.propTypes = {\n    heading: PropTypes.string,\n    subHeading: PropTypes.string,\n    docs: PropTypes.string,\n};\n\nexport default PageTitle;\n","import { Helmet } from 'react-helmet-async';\nimport PageTitle from 'src/components/PageTitle';\nimport { useState } from 'react';\n\nimport PageTitleWrapper from 'src/components/PageTitleWrapper';\nimport { Container, Grid, Card, CardHeader, CardContent, Divider } from '@mui/material';\nimport Footer from 'src/components/Footer';\n\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport MenuItem from '@mui/material/MenuItem';\nimport { pink } from '@mui/material/colors';\nimport Checkbox from '@mui/material/Checkbox';\n\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\n\nimport Stack from '@mui/material/Stack';\nimport Slider from '@mui/material/Slider';\nimport VolumeDown from '@mui/icons-material/VolumeDown';\nimport VolumeUp from '@mui/icons-material/VolumeUp';\n\nimport Switch from '@mui/material/Switch';\n\nconst label = { inputProps: { 'aria-label': 'Switch demo' } };\n\nconst currencies = [\n  {\n    value: 'USD',\n    label: '$',\n  },\n  {\n    value: 'EUR',\n    label: '€',\n  },\n  {\n    value: 'BTC',\n    label: '฿',\n  },\n  {\n    value: 'JPY',\n    label: '¥',\n  },\n];\n\nfunction Forms() {\n\n  const [currency, setCurrency] = useState('EUR');\n\n  const handleChange = (event) => {\n    setCurrency(event.target.value);\n  };\n\n  const [value, setValue] = useState(30);\n\n  const handleChange2 = (event, newValue) => {\n    setValue(newValue);\n  };\n\n\n  return (\n    <>\n      <Helmet>\n        <title>Forms - Components</title>\n      </Helmet>\n      <PageTitleWrapper>\n        <PageTitle\n          heading=\"Forms\"\n          subHeading=\"Components that are used to build interactive placeholders used for data collection from users.\"\n          docs=\"https://material-ui.com/components/text-fields/\" />\n      </PageTitleWrapper>\n      <Container maxWidth=\"lg\">\n        <Grid\n          container\n          direction=\"row\"\n          justifyContent=\"center\"\n          alignItems=\"stretch\"\n          spacing={3}\n        >\n          <Grid item xs={12}>\n            <Card>\n              <CardHeader title=\"Input Fields\" />\n              <Divider />\n              <CardContent>\n                <Box\n                  component=\"form\"\n                  sx={{\n                    '& .MuiTextField-root': { m: 1, width: '25ch' },\n                  }}\n                  noValidate\n                  autoComplete=\"off\"\n                >\n                  <div>\n                    <TextField\n                      required\n                      id=\"outlined-required\"\n                      label=\"Required\"\n                      defaultValue=\"Hello World\"\n                    />\n                    <TextField\n                      disabled\n                      id=\"outlined-disabled\"\n                      label=\"Disabled\"\n                      defaultValue=\"Hello World\"\n                    />\n                    <TextField\n                      id=\"outlined-password-input\"\n                      label=\"Password\"\n                      type=\"password\"\n                      autoComplete=\"current-password\"\n                    />\n                    <TextField\n                      id=\"outlined-read-only-input\"\n                      label=\"Read Only\"\n                      defaultValue=\"Hello World\"\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      id=\"outlined-number\"\n                      label=\"Number\"\n                      type=\"number\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                    />\n                    <TextField id=\"outlined-search\" label=\"Search field\" type=\"search\" />\n                    <TextField\n                      id=\"outlined-helperText\"\n                      label=\"Helper text\"\n                      defaultValue=\"Default Value\"\n                      helperText=\"Some important text\"\n                    />\n                  </div>\n                  <div>\n                    <TextField\n                      required\n                      id=\"filled-required\"\n                      label=\"Required\"\n                      defaultValue=\"Hello World\"\n                      variant=\"filled\"\n                    />\n                    <TextField\n                      disabled\n                      id=\"filled-disabled\"\n                      label=\"Disabled\"\n                      defaultValue=\"Hello World\"\n                      variant=\"filled\"\n                    />\n                    <TextField\n                      id=\"filled-password-input\"\n                      label=\"Password\"\n                      type=\"password\"\n                      autoComplete=\"current-password\"\n                      variant=\"filled\"\n                    />\n                    <TextField\n                      id=\"filled-read-only-input\"\n                      label=\"Read Only\"\n                      defaultValue=\"Hello World\"\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                      variant=\"filled\"\n                    />\n                    <TextField\n                      id=\"filled-number\"\n                      label=\"Number\"\n                      type=\"number\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                      variant=\"filled\"\n                    />\n                    <TextField\n                      id=\"filled-search\"\n                      label=\"Search field\"\n                      type=\"search\"\n                      variant=\"filled\"\n                    />\n                    <TextField\n                      id=\"filled-helperText\"\n                      label=\"Helper text\"\n                      defaultValue=\"Default Value\"\n                      helperText=\"Some important text\"\n                      variant=\"filled\"\n                    />\n                  </div>\n                  <div>\n                    <TextField\n                      required\n                      id=\"standard-required\"\n                      label=\"Required\"\n                      defaultValue=\"Hello World\"\n                      variant=\"standard\"\n                    />\n                    <TextField\n                      disabled\n                      id=\"standard-disabled\"\n                      label=\"Disabled\"\n                      defaultValue=\"Hello World\"\n                      variant=\"standard\"\n                    />\n                    <TextField\n                      id=\"standard-password-input\"\n                      label=\"Password\"\n                      type=\"password\"\n                      autoComplete=\"current-password\"\n                      variant=\"standard\"\n                    />\n                    <TextField\n                      id=\"standard-read-only-input\"\n                      label=\"Read Only\"\n                      defaultValue=\"Hello World\"\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                      variant=\"standard\"\n                    />\n                    <TextField\n                      id=\"standard-number\"\n                      label=\"Number\"\n                      type=\"number\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                      variant=\"standard\"\n                    />\n                    <TextField\n                      id=\"standard-search\"\n                      label=\"Search field\"\n                      type=\"search\"\n                      variant=\"standard\"\n                    />\n                    <TextField\n                      id=\"standard-helperText\"\n                      label=\"Helper text\"\n                      defaultValue=\"Default Value\"\n                      helperText=\"Some important text\"\n                      variant=\"standard\"\n                    />\n                  </div>\n                </Box>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12}>\n            <Card>\n              <CardHeader title=\"Select Inputs\" />\n              <Divider />\n              <CardContent>\n                <Box\n                  component=\"form\"\n                  sx={{\n                    '& .MuiTextField-root': { m: 1, width: '25ch' },\n                  }}\n                  noValidate\n                  autoComplete=\"off\"\n                >\n                  <div>\n                    <TextField\n                      id=\"outlined-select-currency\"\n                      select\n                      label=\"Select\"\n                      value={currency}\n                      onChange={handleChange}\n                      helperText=\"Please select your currency\"\n                      \n                    >\n                      {currencies.map((option) => (\n                        <MenuItem key={option.value} value={option.value}>\n                          {option.label}\n                        </MenuItem>\n                      ))}\n                    </TextField>\n                    <TextField\n                      id=\"outlined-select-currency-native\"\n                      select\n                      label=\"Native select\"\n                      value={currency}\n                      onChange={handleChange}\n                      SelectProps={{\n                        native: true,\n                      }}\n                      helperText=\"Please select your currency\"\n                    >\n                      {currencies.map((option) => (\n                        <option key={option.value} value={option.value}>\n                          {option.label}\n                        </option>\n                      ))}\n                    </TextField>\n                  </div>\n                  <div>\n                    <TextField\n                      id=\"filled-select-currency\"\n                      select\n                      label=\"Select\"\n                      value={currency}\n                      onChange={handleChange}\n                      helperText=\"Please select your currency\"\n                      variant=\"filled\"\n                    >\n                      {currencies.map((option) => (\n                        <MenuItem key={option.value} value={option.value}>\n                          {option.label}\n                        </MenuItem>\n                      ))}\n                    </TextField>\n                    <TextField\n                      id=\"filled-select-currency-native\"\n                      select\n                      label=\"Native select\"\n                      value={currency}\n                      onChange={handleChange}\n                      SelectProps={{\n                        native: true,\n                      }}\n                      helperText=\"Please select your currency\"\n                      variant=\"filled\"\n                    >\n                      {currencies.map((option) => (\n                        <option key={option.value} value={option.value}>\n                          {option.label}\n                        </option>\n                      ))}\n                    </TextField>\n                  </div>\n                  <div>\n                    <TextField\n                      id=\"standard-select-currency\"\n                      select\n                      label=\"Select\"\n                      value={currency}\n                      onChange={handleChange}\n                      helperText=\"Please select your currency\"\n                      variant=\"standard\"\n                    >\n                      {currencies.map((option) => (\n                        <MenuItem key={option.value} value={option.value}>\n                          {option.label}\n                        </MenuItem>\n                      ))}\n                    </TextField>\n                    <TextField\n                      id=\"standard-select-currency-native\"\n                      select\n                      label=\"Native select\"\n                      value={currency}\n                      onChange={handleChange}\n                      SelectProps={{\n                        native: true,\n                      }}\n                      helperText=\"Please select your currency\"\n                      variant=\"standard\"\n                    >\n                      {currencies.map((option) => (\n                        <option key={option.value} value={option.value}>\n                          {option.label}\n                        </option>\n                      ))}\n                    </TextField>\n                  </div>\n                </Box>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12}>\n            <Card>\n              <CardHeader title=\"Switches\" />\n              <Divider />\n              <CardContent>\n                <Switch {...label} defaultChecked />\n                <Switch {...label} />\n                <Switch {...label} disabled defaultChecked />\n                <Switch {...label} disabled />\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12}>\n            <Card>\n              <CardHeader title=\"Checkboxes &amp; Radios\" />\n              <Divider />\n              <CardContent>\n                <Checkbox {...label} defaultChecked />\n                <Checkbox {...label} defaultChecked color=\"secondary\" />\n                <Checkbox {...label} defaultChecked color=\"success\" />\n                <Checkbox {...label} defaultChecked color=\"default\" />\n                <Checkbox\n                  {...label}\n                  defaultChecked\n                  sx={{\n                    color: pink[800],\n                    '&.Mui-checked': {\n                      color: pink[600],\n                    },\n                  }}\n                />\n                <Divider sx={{ my: 5 }} />\n                <FormControl component=\"fieldset\">\n                  <FormLabel component=\"legend\">Gender</FormLabel>\n                  <RadioGroup row aria-label=\"gender\" name=\"row-radio-buttons-group\">\n                    <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\n                    <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\n                    <FormControlLabel value=\"other\" control={<Radio />} label=\"Other\" />\n                    <FormControlLabel\n                      value=\"disabled\"\n                      disabled\n                      control={<Radio />}\n                      label=\"other\"\n                    />\n                  </RadioGroup>\n                </FormControl>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12}>\n            <Card>\n              <CardHeader title=\"Sliders\" />\n              <Divider />\n              <CardContent>\n                <Box sx={{ width: 200 }}>\n                  <Stack spacing={2} direction=\"row\" sx={{ mb: 1 }} alignItems=\"center\">\n                    <VolumeDown />\n                    <Slider aria-label=\"Volume\" value={value} onChange={handleChange2} />\n                    <VolumeUp />\n                  </Stack>\n                  <Slider disabled defaultValue={30} aria-label=\"Disabled slider\" />\n                </Box>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      </Container>\n      <Footer />\n    </>\n  );\n}\n\nexport default Forms;\n"],"sourceRoot":""}