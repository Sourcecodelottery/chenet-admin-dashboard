{"version":3,"sources":["components/Footer/index.tsx","store/States/Helpers/response.types.ts","store/States/News/queries.ts","store/States/News/actions.ts","pages/News/CreateNews/index.tsx"],"names":["FooterWrapper","styled","Box","theme","spacing","Footer","maxWidth","py","display","xs","md","alignItems","textAlign","justifyContent","variant","sx","pt","href","target","rel","ResponseType","createNewsBody","content","targetingOptions","query","title","description","min_age","max_age","sex","location","isForAll","removeNewsBody","_id","createNews","callback","err","data","Axios","post","endPoints","baseURL","then","res","console","log","catch","removeOneNews","FetchNewsesDoc","headers","CreateNews","props","navigate","useNavigate","useState","isLoading","setIsLoading","setTitle","setDescription","minAge","setMinAge","maxAge","setMaxAge","setSex","setLocation","setIsForAll","titleError","descriptionError","minAgeError","maxAgeError","locationError","createNewsHandler","input","map","value","__typename","ValidationError","ValidationErrors","INewsSimple","routes","ADMIN","NEWS","ROUTE","replace","useForm","registerCreateNews","register","handleCreateNewsSubmit","handleSubmit","createNewsErrors","formState","errors","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","width","getStyles","name","personName","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","useTheme","handleGenderSelectionChange","event","split","mx","container","direction","item","onSubmit","minWidth","marginTop","marginRight","padding","component","mt","error","undefined","required","type","label","onChange","e","helperText","multiline","rows","color","id","labelId","multiple","renderValue","selected","flexWrap","gap","control","checked","fontSize","px","connect","state","newses","selectNewses","dispatch","SetNewses","payload","Actions"],"mappings":"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","file":"static/js/56.70bd9565.chunk.js","sourcesContent":["import { Box, Container, Link, Typography } from '@mui/material';\nimport { styled } from '@mui/material/styles';\n\nconst FooterWrapper = styled(Box)(\n  ({ theme }) => `\n        border-radius: 0;\n        margin: ${theme.spacing(3)} 0;\n`\n);\n\nfunction Footer() {\n  return (\n    <FooterWrapper>\n      <Container maxWidth=\"lg\">\n        <Box\n          py={3}\n          display={{ xs: 'block', md: 'flex' }}\n          alignItems=\"center\"\n          textAlign={{ xs: 'center', md: 'left' }}\n          justifyContent=\"space-between\"\n        >\n          <Box>\n            <Typography variant=\"subtitle1\">\n              &copy; 2021 - Tokyo Free White React Admin Dashboard\n            </Typography>\n          </Box>\n          <Typography sx={{ pt: { xs: 2, md: 0 } }} variant=\"subtitle1\">\n            Crafted by <Link href=\"https://bloomui.com\" target=\"_blank\" rel=\"noopener noreferrer\">BloomUI.com</Link>\n          </Typography>\n        </Box>\n      </Container>\n    </FooterWrapper>\n  );\n}\n\nexport default Footer;\n","// const for response types\nexport enum ResponseType {\n  \"ValidationErrors\" = \"ValidationErrors\",\n  \"ValidationError\" = \"ValidationError\",\n  \"ICategorySimple\" = \"ICategorySimple\",\n  \"IPriceSimple\" = \"IPriceSimple\",\n  \"IPriceDoc\" = \"IPriceDoc\",\n  \"IAccountSimple\" = \"IAccountSimple\",\n  \"IGroupDoc\" = \"IGroupDoc\",\n  \"IGroupSimple\" = \"IGroupSimple\",\n  \"INotificationDoc\" = \"INotificationDoc\",\n  \"INotificationSimple\" = \"INotificationSimple\",\n  \"INewsSimple\" = \"INewsSimple\"\n};","import { IBasicID } from \"../Common/types\"\nimport { INewsInput } from \"./news.types\";\n\n// create a news\nexport const createNewsTag = \"createNews\"\n\n\nexport const createNewsBody = ({ content, targetingOptions }: INewsInput) => ({\n  query: `mutation {\n    createNews(input:{content:{ title:\"${content.title}\", description: \"${content.description}\"}, targetingOptions:{min_age: ${targetingOptions.min_age},max_age: ${targetingOptions.max_age}, sex: [${targetingOptions.sex}], location: \"${targetingOptions.location}\",  isForAll: ${targetingOptions.isForAll}}}) {\n      __typename\n      ... on INewsSimple{\n      _id content {title description } targetingOptions{min_age max_age sex location  isForAll } sender createdAt updatedAt   \n       }\n      ... on ValidationError {\n        error_path errors {\n          error_code error_message\n        }\n      }\n    }\n  }`\n});\n\n// fetch all newses\nexport const fetchNewsesDocTag = \"fetchNewsesDoc\";\n\nexport const fetchNewsesDoc = () => ({\n  query: `{\n    fetchNewsesDoc{\n          _id price  minimum_user priority type maximum_user_purchase_amount banned_reason users ActiveUsersCount updatedAt createdAt\n    }\n  }`\n});\n\n// // edit news\n// export const editGroupTag = \"editGroup\";\n\n// export const editGroupBody = ({ _id, price, priority, minimum_user, maximum_user_purchase_amount, type }: IGroupEdit) => ({\n//   query: `mutation {\n//     editGroup(input:{_id: \"${_id}\", price: \"${price}\", priority: \"${priority}\", minimum_user:  ${minimum_user}, maximum_user_purchase_amount: \"${maximum_user_purchase_amount}\", type: ${type}}) {\n//       __typename\n//       ... on IGroupSimple{\n//           _id price  minimum_user priority type maximum_user_purchase_amount banned_reason users ActiveUsersCount updatedAt createdAt\n//       }\n//       ... on ValidationError {\n//         error_path errors {\n//           error_code error_message\n//         }\n//       }\n//       ... on ValidationErrors {\n//         validation_errors {\n//           error_path errors {\n//             error_message error_code\n//           }\n//         }\n//       }\n//     }\n//   }`\n// });\n\n//remove news\nexport const removeNewsTag = \"removeNewsByID\";\n\nexport const removeNewsBody = ({ _id }: IBasicID) => ({\n  query: `mutation {\n    removeNewsByID(_id: \"${_id}\") {\n      __typename\n      ... on INewsSimple{\n      _id content {title description } targetingOptions{ min_age max_age sex location isForAll } sender createdAt updatedAt   \n       }\n      ... on ValidationError {\n        error_path errors {\n          error_code error_message\n        }\n      }\n    }\n  }`\n})\n\n//fetch group\nexport const fetchGroupByIDTag = \"fetchOneGroupByID\";\n\nexport const fetchGroupByIDBody = ({ _id }: IBasicID) => ({\n  query: `{\n    fetchOneGroupByID(_id: \"${_id}\") {\n      __typename\n      ... on IGroupSimple{\n          _id first_name  last_name phone_number email role is_active updatedAt createdAt\n       }\n      ... on ValidationError {\n        error_path errors {\n          error_code error_message\n        }\n      }\n    }\n  }`\n})\n\nexport const FetchNewsesDocBody = () => ({\n  query: `{\n    fetchNewsesDoc{\n             _id content {title description } targetingOptions{min_age max_age sex location  isForAll } sender{first_name last_name _id phone_number email role is_active}  createdAt updatedAt   \n    }\n  }`\n});","import Axios from \"axios\"\nimport endPoints from \"src/constants/endPoints\"\nimport { fetchGroupByIDTag, fetchGroupByIDBody, FetchNewsesDocBody, removeNewsBody, removeNewsTag, createNewsBody, createNewsTag } from \"./queries\"\nimport { IBasicID } from \"../Common/types\"\nimport { INewsInput } from \"./news.types\"\n\n\n// create news\nexport const createNews = ({ content, targetingOptions }: INewsInput, callback = (err: any, data: any) => null) => {\n  Axios.post(endPoints.baseURL, createNewsBody({ content, targetingOptions }))\n    .then(res => {\n      console.log(res.data.data[createNewsTag])\n      callback(null, res.data.data[createNewsTag])\n    })\n    .catch(err => console.log(\"Error\", err))\n}\n\n// // edit news\n// export const editGroup = (({ _id, price, priority, minimum_user, maximum_user_purchase_amount, type }: IGroupEdit, callback = (err: any, data: any) => null) => {\n//   Axios.post(endPoints.baseURL, editGroupBody({ _id, price, priority, minimum_user, maximum_user_purchase_amount, type } as IGroupEdit))\n//     .then(res => {\n//       console.log(res.data.data)\n//       callback(null, res.data.data[editGroupTag])\n//     })\n//     .catch(err => console.log(\"Error\", err))\n// })\n\n// remove news\nexport const removeOneNews = (({ _id }: IBasicID, callback = (err: any, data: any) => null) => {\n  Axios.post(endPoints.baseURL, removeNewsBody({ _id }))\n    .then(res => {\n      callback(null, res.data.data[removeNewsTag])\n    })\n    .catch(err => console.log(\"Error\", err))\n});\n\n// fetch news by Id\nexport const fectchGroupByID = (({ _id }: IBasicID, callback = (err: any, data: any) => null) => {\n  Axios.post(endPoints.baseURL, fetchGroupByIDBody({ _id }))\n    .then(res => {\n      callback(null, res.data.data[fetchGroupByIDTag])\n    })\n    .catch(err => console.log(\"Error\", err))\n});\n\nexport const FetchNewsDocTag = \"fetchNewsesDoc\"\n\nexport const FetchNewsesDoc = (callback = (err: any, data: any, headers) => null) => {\n  Axios.post(endPoints.baseURL, FetchNewsesDocBody())\n    .then((res: { data: { data: { [x: string]: any; }; }; }) => {\n      console.log(res.data.data);\n      callback(null, res.data.data[FetchNewsDocTag], res)\n    })\n    .catch(err => console.log(\"Error\", err))\n};","import {\n  Button, CircularProgress, Container, Grid, TextField, Card,\n  CardActions, CardContent, Typography, Checkbox, ListItemIcon,\n  ListItemText, makeStyles, FormControlLabel\n} from \"@mui/material\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { INewsInput } from \"src/store/States/News/news.types\";\nimport { createNews } from \"src/store/States/News/actions\";\nimport { connect } from \"react-redux\";\nimport { Helmet } from \"react-helmet-async\";\nimport Footer from \"src/components/Footer\";\nimport { useNavigate } from \"react-router\";\nimport { ResponseType } from \"src/store/States/Helpers/response.types\";\nimport { Theme, useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\nimport Chip from '@mui/material/Chip';\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport { Actions, selectNewses } from \"src/store/States/News\";\nimport routes from 'src/constants/routes'\n\nexport function CreateNews(props) {\n  const gender = [\"MALE\", \"FEMALE\"];\n  const navigate = useNavigate();\n\n  const [isFailed, setIsFailed] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  // fields\n  const [title, setTitle] = useState(null);\n  const [description, setDescription] = useState([]);\n  const [minAge, setMinAge] = useState(null);\n  const [maxAge, setMaxAge] = useState(null);\n  const [sex, setSex] = useState([]);\n  const [location, setLocation] = useState(null);\n  const [isForAll, setIsForAll] = useState(false);\n  // fields error\n  const [titleError, setTitleError] = useState(null);\n  const [descriptionError, setDescriptionError] = useState(null);\n  const [minAgeError, setMinAgeError] = useState(null);\n  const [maxAgeError, setMaxAgeError] = useState(null);\n  const [sexError, setSexError] = useState(null);\n  const [locationError, setLocationError] = useState(null);\n\n\n  const createNewsHandler = (input: INewsInput) => {\n    setIsLoading(true)\n    input.targetingOptions.sex = input.targetingOptions.sex.map(value => `${value}`);\n    createNews(input, (err: any, data: any) => {\n      switch (data.__typename) {\n        case ResponseType.ValidationError:\n          // setErrorMessminAge(data.errors[0].error_messminAge);\n          setIsLoading(false);\n          break;\n        case ResponseType.ValidationErrors:\n          // setErrorMessminAge(data.validation_errors[0].errors[0].error_messminAge);\n          setIsLoading(false);\n          break;\n        case ResponseType.INewsSimple:\n          setIsLoading(false)\n          // props.SetNewses(data)\n          navigate(routes.ADMIN.NEWS.ROUTE, { replace: true })\n          break;\n      }\n    }\n    )\n  }\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    // setRole(event.target.value);\n  };\n\n  const {\n    register: registerCreateNews,\n    handleSubmit: handleCreateNewsSubmit,\n    formState: { errors: createNewsErrors },\n  } = useForm<INewsInput>();\n\n\n\n  const ITEM_HEIGHT = 48;\n  const ITEM_PADDING_TOP = 8;\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 250,\n      },\n    },\n  };\n\n\n  function getStyles(name: string, personName: readonly string[], theme: Theme) {\n    return {\n      fontWeight:\n        personName.indexOf(name) === -1\n          ? theme.typography.fontWeightRegular\n          : theme.typography.fontWeightMedium,\n    };\n  }\n\n  const theme = useTheme();\n  // const [personName, setPersonName] = React.useState<string[]>([]);\n\n  const handleGenderSelectionChange = (event: SelectChangeEvent<typeof sex>) => {\n    const {\n      target: { value },\n    } = event;\n    setSex(\n      // On autofill we get a the stringified value.\n      typeof value === 'string' ? value.split(',') : value,\n    );\n  };\n\n  const createNewsForm = () => <form onSubmit={handleCreateNewsSubmit(createNewsHandler)}>\n    <Card sx={{ minWidth: 275, marginTop: 5, marginRight: 5, padding: 4 }}>\n      <CardContent>\n        <Typography variant=\"h3\" component=\"div\">\n          Create News\n        </Typography>\n        <Box>\n          <TextField\n            sx={{ width: \"60%\", mt: 4 }}\n            error={((createNewsErrors.content !== undefined ? createNewsErrors.content.title : false) || titleError) ? true : false}\n            {...registerCreateNews(\"content.title\", { required: true })}\n            type=\"text\"\n            label=\"title\"\n            variant=\"outlined\"\n            value={title ?? \"\"}\n            onChange={(e) => {\n              setTitle(e.target.value)\n            }}\n            helperText={(createNewsErrors.content !== undefined ? createNewsErrors.content.title : false) ? <span>This field is required</span> : (titleError ? titleError : null)}\n          />\n          <TextField\n            sx={{ width: \"60%\", mt: 4 }}\n            error={((createNewsErrors.content !== undefined ? createNewsErrors.content.description : false) || descriptionError) ? true : false}\n            {...registerCreateNews(\"content.description\", { required: true })}\n            label=\"description\"\n            onChange={(e) => {\n              setDescription(description)\n            }}\n            helperText={(createNewsErrors.content !== undefined ? createNewsErrors.content.description : false) ? <span>This field is required</span> : (descriptionError ? descriptionError : null)}\n            variant=\"outlined\"\n            type=\"text\"\n            multiline\n            rows={4}\n          />\n          <Box sx={{ marginTop: 5, color: \"primary\", fontWeight: \"bold\" }}>\n            Targeted User Options\n          </Box>\n          <TextField\n            value={minAge ?? \"\"}\n            sx={{ width: \"60%\", mt: 4 }}\n            error={(minAgeError || (createNewsErrors.targetingOptions !== undefined ? createNewsErrors.targetingOptions.min_age : false)) ? true : false}\n            {...registerCreateNews(\"targetingOptions.min_age\", { required: true })}\n            label=\"minimum minAge\"\n            type=\"number\"\n            variant=\"outlined\"\n            onChange={(e) => {\n              setMinAge(e.target.value);\n            }}\n            helperText={(createNewsErrors.targetingOptions !== undefined ? createNewsErrors.targetingOptions.min_age : false) ? <span>This field is required</span> : (minAgeError ? minAgeError : null)}\n          />\n          <TextField\n            value={maxAge ?? \"\"}\n            sx={{ width: \"60%\", mt: 4 }}\n            error={(maxAgeError || (createNewsErrors.targetingOptions !== undefined ? createNewsErrors.targetingOptions.max_age : false)) ? true : false}\n            {...registerCreateNews(\"targetingOptions.max_age\", { required: true })}\n            label=\"max minAge\"\n            type=\"number\"\n            variant=\"outlined\"\n            onChange={(e) => {\n              setMaxAge(e.target.value);\n            }}\n            helperText={(createNewsErrors.targetingOptions !== undefined ? createNewsErrors.targetingOptions.max_age : false) ? <span>This field is required</span> : (minAgeError ? minAgeError : null)}\n          />\n          <TextField\n            value={location ?? \"\"}\n            sx={{ width: \"60%\", mt: 4 }}\n            error={(locationError || (createNewsErrors.targetingOptions !== undefined ? createNewsErrors.targetingOptions.location : false)) ? true : false}\n            {...registerCreateNews(\"targetingOptions.location\", { required: true })}\n            label=\"location\"\n            type=\"text\"\n            variant=\"outlined\"\n            onChange={(e) => {\n              setLocation(e.target.value);\n            }}\n            helperText={(createNewsErrors.targetingOptions !== undefined ? createNewsErrors.targetingOptions.max_age : false) ? <span>This field is required</span> : (minAgeError ? minAgeError : null)}\n          />\n          <FormControl sx={{ width: \"60%\", mt: 4 }}>\n            <InputLabel id=\"gender-selector\">Gender</InputLabel>\n            <Select\n              error={(maxAgeError || (createNewsErrors.targetingOptions !== undefined ? createNewsErrors.targetingOptions.sex : false)) ? true : false}\n              {...registerCreateNews(\"targetingOptions.sex\", { required: true })}\n              labelId=\"gender-selector\"\n              id=\"demo-multiple-chip\"\n              multiple\n              value={sex}\n              onChange={handleGenderSelectionChange}\n              input={<OutlinedInput id=\"select-multiple-chip\" label=\"gender\" />}\n              renderValue={(selected) => (\n                <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                  {selected.map((value) => (\n                    <Chip key={value} label={value} />\n                  ))}\n                </Box>\n              )}\n              MenuProps={MenuProps}\n            >\n              {[\"MALE\", \"FEMALE\"].map((value) => (\n                <MenuItem\n                  key={value}\n                  value={value}\n                  style={getStyles(value, sex, theme)}\n                >\n                  {value}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          <Box sx={{ display: 'block' }}>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  {...registerCreateNews(\"targetingOptions.isForAll\", { required: false })}\n                  checked={isForAll}\n                  onChange={(e) => {\n                    setIsForAll(e.target.checked)\n                  }}\n                  sx={{ '& .MuiSvgIcon-root': { fontSize: 28 } }}\n                />\n              }\n              label=\"For All\"\n            />\n          </Box>\n          <Box sx={{ display: 'block' }}>\n            <Button sx={{ mt: 4, px: 5 }} variant=\"contained\" color=\"primary\" type=\"submit\">\n              {isLoading ? <CircularProgress style={{ color: \"white\" }} /> : \"create\"}\n            </Button>\n          </Box>\n        </Box>\n      </CardContent>\n    </Card>\n  </form>\n\nconsole.log(\"jnkjbakjbkjbkjb\")\n\n  return (\n    <>\n      <Helmet>\n        <title>Ethio Lottery</title>\n      </Helmet>\n      <Container maxWidth=\"lg\">\n        <Grid\n          sx={{ mx: \"auto\" }}\n          container\n          direction=\"row\"\n          justifyContent=\"center\"\n          alignItems=\"stretch\"\n          spacing={3}\n        >\n          <Grid item xs={12}>\n            {createNewsForm()}\n          </Grid>\n        </Grid>\n      </Container>\n      <Footer />\n    </>\n  );\n}\n\nCreateNews.propTypes = {\n  newses: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = (state: any) => ({\n  newses: selectNewses(state)\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  SetNewses: (payload: any) => dispatch(Actions.SetNewses(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateNews);\n"],"sourceRoot":""}