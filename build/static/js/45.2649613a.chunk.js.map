{"version":3,"sources":["components/PageTitleWrapper/index.tsx","../node_modules/@mui/icons-material/AddTwoTone.js","components/PageTitle/index.tsx","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","store/States/Survey/survey.types.ts","survey/FillSurvey/answer_element.tsx","survey/FillSurvey/survey_content.tsx","survey/FillSurvey/index.tsx"],"names":["PageTitle","styled","Box","theme","spacing","PageTitleWrapper","children","maxWidth","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","heading","subHeading","docs","noButton","rest","container","justifyContent","alignItems","item","variant","component","gutterBottom","href","target","rel","sx","mt","xs","md","startIcon","fontSize","getCardContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardContentRoot","name","overridesResolver","props","styles","root","padding","paddingBottom","CardContent","React","inProps","ref","useThemeProps","className","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","_jsx","as","clsx","ISurveyType","IQuestionTypes","IGender","AnswerElement","questionType","title","fetchedChoices","handleAnswerUpdate","questionIdx","idx","error","useState","choices","setChoices","choiceValues","setChoiceValues","useEffect","length","map","choice","Number","id","text","handleChoice","newValues","_","_idx","MULTIPLE_CHOICE","choiceLabels","getValue","index","findIndex","INPUT","style","display","flexDirection","TextField","width","disabled","onChange","event","Boolean","helperText","marginRight","RadioGroup","row","FormControlLabel","checked","control","Radio","label","filter","data","Card","marginBottom","Divider","m","connect","state","mainSurveyBuffer","selectMainSurveyBuffer","choicesBuffer","selectChoicesBuffer","String","questions","setQuestions","answers","setAnswers","navigate","useNavigate","errors","setErrors","getError","answer","params","useParams","FetchSurveyContentsBySurveyID","err","_Questions","ChoiceQASetInputs","forEach","choiceQA","push","questionDescription","orderNumber","InputQASetInputs","inputQA","sort","question1","question2","question","Container","Grid","direction","CardHeader","Button","margin","color","type","onClick","_errors","values","PostSurveyReport","surveyID","ChoiceQASetAnswers","InputQASetAnswers","answerDescription","routes","STATUS","THANK_YOU_PAGE","ROUTE","replace"],"mappings":"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","file":"static/js/45.2649613a.chunk.js","sourcesContent":["import { FC, ReactNode } from 'react';\nimport { Container } from '@mui/material';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/material/styles';\nimport { Box } from '@mui/material';\n\nconst PageTitle = styled(Box)(\n  ({ theme }) => `\n        padding: ${theme.spacing(4, 0)};\n`\n);\n\ninterface PageTitleWrapperProps {\n  children?: ReactNode;\n}\n\nconst PageTitleWrapper: FC<PageTitleWrapperProps> = ({ children }) => {\n  return (\n    <>\n      <PageTitle>\n        <Container maxWidth=\"lg\">\n          {children}\n        </Container>\n      </PageTitle>\n    </>\n  );\n};\n\nPageTitleWrapper.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default PageTitleWrapper;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'AddTwoTone');\n\nexports.default = _default;","import { FC } from 'react';\nimport PropTypes from 'prop-types';\nimport AddTwoToneIcon from '@mui/icons-material/AddTwoTone';\nimport { Typography, Button, Grid } from '@mui/material';\n\ninterface PageTitleProps {\n    heading?: string;\n    subHeading?: string;\n    docs?: string;\n    noButton?: boolean;\n}\n\nconst PageTitle: FC<PageTitleProps> = ({\n    heading = '',\n    subHeading = '',\n    docs = '',\n    noButton = false,\n    ...rest\n}) => {\n    return (\n        <Grid container justifyContent=\"space-between\" alignItems=\"center\" {...rest}>\n            <Grid item>\n                <Typography variant=\"h3\" component=\"h3\" gutterBottom>\n                    {heading}\n                </Typography>\n                <Typography variant=\"subtitle2\">\n                    {subHeading}\n                </Typography>\n            </Grid>\n            {!noButton && <Grid item>\n                <Button\n                    href={docs}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    sx={{ mt: { xs: 2, md: 0 } }}\n                    variant=\"contained\"\n                    startIcon={<AddTwoToneIcon fontSize=\"small\" />}\n                >\n                    {heading}\n                </Button>\n            </Grid>}\n        </Grid>\n    );\n};\n\nPageTitle.propTypes = {\n    heading: PropTypes.string,\n    subHeading: PropTypes.string,\n    docs: PropTypes.string,\n};\n\nexport default PageTitle;\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\n\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n\n  const {\n    className,\n    component = 'div'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default CardContent;","export interface ISurvey {\n  _id: string\n  title: string\n  description: string\n  gender: IGender\n  demographicDetails: IDemographicDetails\n  ageLimit: IAgeLimit\n  ownerID: string\n  targetingOptions: ITargetingOptions\n  admins: string[]\n  surveyType: ISurveyType\n  consumerUsers: string[]\n  consumerLimit: number\n  unitCost: number\n}\n\nexport interface ISurveyInput {\n  title: string\n  description: string\n  gender: IGender\n  demographicDetails: IDemographicDetails\n  ageLimit: IAgeLimit\n  ownerID: string\n  targetingOptions: ITargetingOptions\n  surveyType: ISurveyType\n}\n\nexport type DemographyDetailsType = {\n  country: string[]\n  region: string[]\n  zone: string[]\n}\n\nexport type TargetingOptionsType = {\n  education: string[]\n  employmentStatus: string[]\n  industry: string[]\n  martialStatus: string[]\n  parentalStatus: string[]\n}\n\nexport type SurveyInputTypes = {\n  title: string\n  description: string\n  gender: IGender\n  demographicDetails: DemographyDetailsType\n  ageLimit: IAgeLimit\n  ownerID: string\n  targetingOptions: TargetingOptionsType\n  surveyType: ISurveyType\n}\n\nexport enum ISurveyType {\n  PRIVATE = \"PRIVATE\",\n  PUBLIC = \"PUBLIC\",\n  FOR_SALE = \"FOR SALE\",\n}\n\nexport enum IQuestionTypes {\n  MULTIPLE_CHOICE = \"MULTIPLE CHOICE\",\n  INPUT = \"INPUT\",\n  RANGE = \"RANGE\"\n}\n\nexport enum IGender {\n  \"MALE\" = \"MALE\",\n  \"FEMALE\" = \"FEMALE\"\n}\n\nexport interface IDemographicDetails {\n  country: string[]\n  region: string[]\n  zone: string[]\n}\n\nexport interface IAgeLimit {\n  max: number, min: number\n}\n\nexport interface ITargetingOptions {\n  education: string[]\n  employmentStatus: string[]\n  industry: string[]\n  martialStatus: string[]\n  parentalStatus: string[]\n}","import { FormControlLabel, Radio, RadioGroup, TextField } from \"@mui/material\"\nimport { useEffect, useState } from \"react\"\nimport { IQuestionTypes } from \"src/store/States/Survey/survey.types\"\n\ninterface IProp {\n  title?: string;\n  questionType: string;\n  fetchedChoices: any[];\n  idx: number;\n  handleAnswerUpdate: (idx: number, questionType: IQuestionTypes, value: any) => void\n  error: any\n}\n\nconst AnswerElement = ({ questionType, title, fetchedChoices, handleAnswerUpdate, idx: questionIdx, error }: IProp) => {\n  const [choices, setChoices] = useState([\n    { idx: 0, value: \"Some things\" },\n    { idx: 1, value: \"JK things\" },\n    { idx: 2, value: \"JN things\" },\n    { idx: 3, value: \"LM things\" },\n  ])\n  const [choiceValues, setChoiceValues] = useState([])\n\n  useEffect(() => {\n    if (fetchedChoices.length > 0) {\n      setChoices(fetchedChoices.map(choice => ({ idx: Number(choice.id), value: choice.text })))\n      setChoiceValues(fetchedChoices.map(() => false))\n    }\n  }, [fetchedChoices, setChoices, setChoiceValues])\n\n  const handleChoice = (idx: number) => {\n    let newValues = choiceValues.map((_, _idx) => _idx === idx)\n    setChoiceValues(newValues)\n    handleAnswerUpdate(questionIdx, IQuestionTypes.MULTIPLE_CHOICE, choices[idx])\n  }\n\n  const choiceLabels = ['A', 'B', 'C', 'D']\n\n  const getValue = (idx: number) => {\n    const index = choices.findIndex(choice => choice.idx === idx)\n    return index >= 0 ? choices[index].value : \"\"\n  }\n\n  return questionType === IQuestionTypes.INPUT ? (\n    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n      <TextField\n        id=\"outlined-helperText\"\n        style={{ width: 520 }}\n        value={title}\n        disabled\n        variant=\"standard\"\n      />\n      <TextField\n        id=\"outlined-helperText\"\n        style={{ width: 820 }}\n        onChange={(event) => handleAnswerUpdate(questionIdx, IQuestionTypes.INPUT, event.target.value)}\n        error={Boolean(error.value)}\n        helperText={error.value}\n      />\n    </div>\n  ) : questionType === IQuestionTypes.MULTIPLE_CHOICE ? (\n    <>\n      <div style={{ display: \"flex\", justifyContent: \"flex-start\", width: \"100%\" }}>\n        <TextField\n          id=\"outlined-helperText\"\n          style={{ width: 340 }}\n          value={title}\n          variant=\"standard\"\n          disabled\n          error={Boolean(error.value)}\n          helperText={error.value}\n        />\n      </div>\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n        {choices.length <= 2 ?\n          choices.map((choice, idx) => (\n            <div style={{ display: \"flex\", alignItems: \"center\", marginRight: 70 }}>\n              <RadioGroup row aria-label=\"choice\" name=\"row-radio-buttons-group\">\n                <FormControlLabel checked={choiceValues[idx]} onChange={() => handleChoice(idx)} control={<Radio />} label=\"\" />\n              </RadioGroup>\n              <label>{choiceLabels[idx]}</label>\n              <TextField\n                id=\"outlined-helperText\"\n                style={{ width: 320 }}\n                value={getValue(choice.idx)}\n                disabled\n                variant=\"standard\"\n              />\n            </div>\n          )) : (\n            <div style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\" }}>\n              <div>\n                {choices.filter(item => item.idx < 2).map((choice, idx) => (\n                  <div style={{ display: \"flex\", alignItems: \"center\", marginRight: 70 }}>\n                    <RadioGroup row aria-label=\"choice\" name=\"row-radio-buttons-group\">\n                      <FormControlLabel checked={choiceValues[idx]} onChange={() => handleChoice(idx)} control={<Radio />} label=\"\" />\n                    </RadioGroup>\n                    <label>{choiceLabels[idx]}</label>\n                    <TextField\n                      id=\"outlined-helperText\"\n                      style={{ width: 320 }}\n                      value={getValue(choice.idx)}\n                      disabled\n                      variant=\"standard\"\n                    />\n                  </div>\n                ))}\n              </div>\n              <div>\n                {choices.filter(item => item.idx >= 2).map((choice, idx) => (\n                  <div style={{ display: \"flex\", alignItems: \"center\", marginRight: 70 }}>\n                    <RadioGroup row aria-label=\"choice\" name=\"row-radio-buttons-group\">\n                      <FormControlLabel checked={choiceValues[2 + idx]} onChange={() => handleChoice(2 + idx)} control={<Radio />} label=\"\" />\n                    </RadioGroup>\n                    <label>{choiceLabels[2 + idx]}</label>\n                    <TextField\n                      id=\"outlined-helperText\"\n                      style={{ width: 320 }}\n                      value={getValue(choice.idx)}\n                      disabled\n                      variant=\"standard\"\n                    />\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n      </div>\n    </>\n  ) : <></>\n}\n\nexport default AnswerElement","import { Card, Divider, CardContent, Box } from \"@mui/material\"\nimport { IQuestionTypes } from \"src/store/States/Survey/survey.types\"\nimport AnswerElement from './answer_element'\n\ninterface IProps {\n  data: any\n  handleAnswerUpdate: (idx: number, questionType: IQuestionTypes, value: any) => void\n  error: any\n}\n\nexport default ({\n  data, handleAnswerUpdate, error\n}: IProps) => {\n  return (\n    <Card style={{ marginBottom: 25 }}>\n      <Divider />\n      <CardContent>\n        <Box\n          component=\"data\"\n          sx={{\n            '& .MuiTextField-root': { m: 1, width: '25ch' },\n          }}\n          style={{ display: \"flex\", justifyContent: \"space-between\", width: \"100%\" }}\n        >\n          <div aria-label=\"industry-input\">\n            <br />\n            <AnswerElement\n              idx={data.idx}\n              questionType={data.questionType}\n              title={data.title}\n              fetchedChoices={data.choices? data.choices : []}\n              handleAnswerUpdate={handleAnswerUpdate}\n              error={error}\n            />\n          </div>\n        </Box>\n      </CardContent>\n    </Card>\n  )\n}","import { Container, Grid, Card, CardHeader, Divider, CardContent, Box, Button, TextField, MenuItem, CircularProgress } from \"@mui/material\"\nimport React, { useEffect, useState } from \"react\"\nimport { Helmet } from \"react-helmet-async\"\nimport PageTitle from \"src/components/PageTitle\"\nimport PageTitleWrapper from \"src/components/PageTitleWrapper\"\nimport routes from \"src/constants/routes\"\nimport { IQuestionTypes, ISurvey } from \"src/store/States/Survey/survey.types\"\nimport { IChoice, ISurveyContentDoc, SurveyContentTypes } from \"src/store/States/Survey/survey_content.types\"\nimport SurveyContent from \"./survey_content\"\nimport { useForm } from \"react-hook-form\"\nimport { selectMainSurveyBuffer, selectChoicesBuffer, FetchSurveyContentsBySurveyID, PostSurveyReport } from \"src/store/States/Survey\"\nimport { useNavigate, useParams } from \"react-router\"\nimport { connect } from \"react-redux\"\nimport { ISurveyReportDoc } from \"src/store/States/Survey/survey_report.types\"\n\nconst FillSurvey = ({ mainSurveyBuffer, choicesBuffer }) => {\n  const [questions, setQuestions] = useState([{\n    title: \"\",\n    questionType: String(IQuestionTypes.INPUT),\n    idx: 0\n  }])\n  const [answers, setAnswers] = useState([])\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n\n  const [errors, setErrors] = useState([])\n\n  const onSubmit = () => {\n    let _errors: any[] = []\n    answers.forEach(answer => {\n      let error: any = {}\n      if (answer.value === \"\") {\n        error.value = \"This field is requried\"\n      }\n      if (Object.values(error).length > 0) {\n        _errors.push({ ...error, idx: answer.idx })\n      }\n    })\n    setErrors(_errors)\n    if (_errors.length === 0) {\n      PostSurveyReport({\n        surveyID: params.id,\n        ChoiceQASetAnswers: answers.filter(answer => answer.questionType === IQuestionTypes.MULTIPLE_CHOICE)\n          .map(answer => ({\n            choice: { id: String(answer.value.idx), text: answer.value.value },\n            orderNumber: Number(answer.idx)\n          })),\n        InputQASetAnswers: answers.filter(answer => answer.questionType === IQuestionTypes.INPUT)\n          .map(answer => ({\n            answerDescription: answer.value,\n            orderNumber: Number(answer.idx)\n          }))\n      }, (error, data: ISurveyReportDoc) => {\n        if (error) throw error\n        navigate(routes.STATUS.THANK_YOU_PAGE.ROUTE, { replace: true })\n      })\n    }\n  }\n\n  const getError = (idx: number) => {\n    const index = errors.findIndex(error => error.idx === idx)\n    return index >= 0 ? errors[index] : {}\n  }\n\n  const handleAnswerUpdate = (idx: number, questionType: IQuestionTypes, value: any) => {\n    setAnswers(\n      answers.map(answer => answer.idx === idx? {\n        ...answer, questionType, value\n      } : answer)\n    )\n  }\n\n  const params = useParams()\n  useEffect(() => {\n    FetchSurveyContentsBySurveyID(params.id, (err, data: ISurveyContentDoc) => {\n      if (err) throw err\n      let _Questions: any[] = []\n      data.ChoiceQASetInputs.forEach(choiceQA => {\n        _Questions.push({\n          title: choiceQA.questionDescription,\n          questionType: IQuestionTypes.MULTIPLE_CHOICE,\n          idx: choiceQA.orderNumber,\n          choices: choiceQA.choices\n        })\n      })\n      data.InputQASetInputs.forEach(inputQA => {\n        _Questions.push({\n          title: inputQA.questionDescription,\n          questionType: IQuestionTypes.INPUT,\n          idx: inputQA.orderNumber,\n          choices: []\n        })\n      })\n      _Questions.sort((question1: any, question2: any) => question1.idx - question2.idx)\n      setQuestions(_Questions)\n      setAnswers(_Questions.map(question => ({ idx: question.idx, value: \"\", questionType: question.questionType })))\n    })\n  }, [params, setQuestions, setAnswers])\n\n  return (\n    <>\n      <Helmet>\n        <title>Fill Survey</title>\n      </Helmet>\n      <PageTitleWrapper>\n        <PageTitle\n          heading=\"Fill Survey Contents\"\n          subHeading=\"Fill survey contents dependeing on your opinion.\"\n          noButton={true}\n        />\n      </PageTitleWrapper>\n      <Container maxWidth=\"lg\">\n        <Grid\n          container\n          direction=\"row\"\n          justifyContent=\"center\"\n          alignItems=\"stretch\"\n          spacing={3}\n        >\n          <Grid item xs={12}>\n            <Grid\n              direction=\"row\"\n              justifyContent=\"space-between\"\n              alignItems=\"stretch\"\n              display=\"flex\"\n            >\n              <CardHeader title=\"Survey Questions\" />\n            </Grid>\n            {questions.map((question) => (\n              <SurveyContent\n                data={question}\n                handleAnswerUpdate={handleAnswerUpdate}\n                error={getError(question.idx)}\n              />\n            ))}\n          </Grid>\n        </Grid>\n        <Card>\n          <CardContent>\n            <Box\n              sx={{\n                '& .MuiTextField-root': { m: 1, width: '25ch' },\n              }}\n              style={{ display: \"flex\", justifyContent: \"center\" }}\n            >\n              <Button\n                sx={{ margin: 1 }} variant=\"contained\" color=\"primary\" type=\"submit\"\n                onClick={onSubmit}\n              >\n                Submit Survey\n              </Button>\n            </Box>\n          </CardContent>\n        </Card>\n      </Container>\n    </>\n  )\n}\n\nconst mapStateToProps = (state: any) => ({\n  mainSurveyBuffer: selectMainSurveyBuffer(state),\n  choicesBuffer: selectChoicesBuffer(state)\n})\n\nexport default connect(mapStateToProps)(FillSurvey)"],"sourceRoot":""}