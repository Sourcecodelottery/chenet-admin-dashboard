{"version":3,"sources":["components/PageTitleWrapper/index.tsx","../node_modules/@mui/icons-material/AddTwoTone.js","components/PageTitle/index.tsx","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","store/States/Survey/survey.types.ts","survey/SingleSurveyContents/answer_element.tsx","survey/SingleSurveyContents/input_answer_element.tsx","survey/SingleSurveyContents/doughnut_element.tsx","survey/SingleSurveyContents/choice_answer_element.tsx","survey/SingleSurveyContents/survey_content.tsx","survey/SingleSurveyContents/index.tsx"],"names":["PageTitle","styled","Box","theme","spacing","PageTitleWrapper","children","maxWidth","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","heading","subHeading","docs","noButton","rest","container","justifyContent","alignItems","item","variant","component","gutterBottom","href","target","rel","sx","mt","xs","md","startIcon","fontSize","getCardContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardContentRoot","name","overridesResolver","props","styles","root","padding","paddingBottom","CardContent","React","inProps","ref","useThemeProps","className","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","_jsx","as","clsx","ISurveyType","IQuestionTypes","IGender","AnswerElement","questionType","title","fetchedChoices","useState","idx","choices","setChoices","useEffect","length","map","choice","Number","id","text","choiceLabels","getValue","index","findIndex","INPUT","TextField","label","style","width","disabled","MULTIPLE_CHOICE","display","flexDirection","marginRight","filter","InputAnswerElement","answers","height","overflow","answer","backgroundColor","AccountBalanceChart","dataProp","data","frequencies","useTheme","datasets","dataset","borderWidth","borderColor","colors","alpha","white","hoverBorderColor","labels","options","responsive","maintainAspectRatio","animation","cutoutPercentage","legend","layout","tooltips","enabled","caretSize","displayColors","mode","intersect","yPadding","xPadding","bodySpacing","black","palette","common","titleFontColor","bodyFontColor","footerFontColor","callbacks","tooltipItem","_data","frequency","ChoiceAnswerElement","uniqueAnswers","forEach","ans","push","graphData","Math","floor","getQuestionAnswers","Card","marginBottom","Divider","m","answerText","connect","state","mainSurveyBuffer","selectMainSurveyBuffer","choicesBuffer","selectChoicesBuffer","selectedSurvey","selectSelectedSurvey","String","questions","setQuestions","setAnswers","FetchSurveyReportsBySurveyID","err","_Answers","report","ChoiceQASetAnswers","orderNumber","InputQASetAnswers","answerDescription","FetchSurveyContentsBySurveyID","_Questions","ChoiceQASetInputs","choiceQA","questionDescription","InputQASetInputs","inputQA","sort","question1","question2","Container","Grid","direction","CardHeader","question"],"mappings":"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","file":"static/js/46.137a26cc.chunk.js","sourcesContent":["import { FC, ReactNode } from 'react';\nimport { Container } from '@mui/material';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/material/styles';\nimport { Box } from '@mui/material';\n\nconst PageTitle = styled(Box)(\n  ({ theme }) => `\n        padding: ${theme.spacing(4, 0)};\n`\n);\n\ninterface PageTitleWrapperProps {\n  children?: ReactNode;\n}\n\nconst PageTitleWrapper: FC<PageTitleWrapperProps> = ({ children }) => {\n  return (\n    <>\n      <PageTitle>\n        <Container maxWidth=\"lg\">\n          {children}\n        </Container>\n      </PageTitle>\n    </>\n  );\n};\n\nPageTitleWrapper.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default PageTitleWrapper;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'AddTwoTone');\n\nexports.default = _default;","import { FC } from 'react';\nimport PropTypes from 'prop-types';\nimport AddTwoToneIcon from '@mui/icons-material/AddTwoTone';\nimport { Typography, Button, Grid } from '@mui/material';\n\ninterface PageTitleProps {\n    heading?: string;\n    subHeading?: string;\n    docs?: string;\n    noButton?: boolean;\n}\n\nconst PageTitle: FC<PageTitleProps> = ({\n    heading = '',\n    subHeading = '',\n    docs = '',\n    noButton = false,\n    ...rest\n}) => {\n    return (\n        <Grid container justifyContent=\"space-between\" alignItems=\"center\" {...rest}>\n            <Grid item>\n                <Typography variant=\"h3\" component=\"h3\" gutterBottom>\n                    {heading}\n                </Typography>\n                <Typography variant=\"subtitle2\">\n                    {subHeading}\n                </Typography>\n            </Grid>\n            {!noButton && <Grid item>\n                <Button\n                    href={docs}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    sx={{ mt: { xs: 2, md: 0 } }}\n                    variant=\"contained\"\n                    startIcon={<AddTwoToneIcon fontSize=\"small\" />}\n                >\n                    {heading}\n                </Button>\n            </Grid>}\n        </Grid>\n    );\n};\n\nPageTitle.propTypes = {\n    heading: PropTypes.string,\n    subHeading: PropTypes.string,\n    docs: PropTypes.string,\n};\n\nexport default PageTitle;\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\n\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n\n  const {\n    className,\n    component = 'div'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default CardContent;","export interface ISurvey {\n  _id: string\n  title: string\n  description: string\n  gender: IGender\n  demographicDetails: IDemographicDetails\n  ageLimit: IAgeLimit\n  ownerID: string\n  targetingOptions: ITargetingOptions\n  admins: string[]\n  surveyType: ISurveyType\n  consumerUsers: string[]\n  consumerLimit: number\n  unitCost: number\n}\n\nexport interface ISurveyInput {\n  title: string\n  description: string\n  gender: IGender\n  demographicDetails: IDemographicDetails\n  ageLimit: IAgeLimit\n  ownerID: string\n  targetingOptions: ITargetingOptions\n  surveyType: ISurveyType\n}\n\nexport type DemographyDetailsType = {\n  country: string[]\n  region: string[]\n  zone: string[]\n}\n\nexport type TargetingOptionsType = {\n  education: string[]\n  employmentStatus: string[]\n  industry: string[]\n  martialStatus: string[]\n  parentalStatus: string[]\n}\n\nexport type SurveyInputTypes = {\n  title: string\n  description: string\n  gender: IGender\n  demographicDetails: DemographyDetailsType\n  ageLimit: IAgeLimit\n  ownerID: string\n  targetingOptions: TargetingOptionsType\n  surveyType: ISurveyType\n}\n\nexport enum ISurveyType {\n  PRIVATE = \"PRIVATE\",\n  PUBLIC = \"PUBLIC\",\n  FOR_SALE = \"FOR SALE\",\n}\n\nexport enum IQuestionTypes {\n  MULTIPLE_CHOICE = \"MULTIPLE CHOICE\",\n  INPUT = \"INPUT\",\n  RANGE = \"RANGE\"\n}\n\nexport enum IGender {\n  \"MALE\" = \"MALE\",\n  \"FEMALE\" = \"FEMALE\"\n}\n\nexport interface IDemographicDetails {\n  country: string[]\n  region: string[]\n  zone: string[]\n}\n\nexport interface IAgeLimit {\n  max: number, min: number\n}\n\nexport interface ITargetingOptions {\n  education: string[]\n  employmentStatus: string[]\n  industry: string[]\n  martialStatus: string[]\n  parentalStatus: string[]\n}","import { TextField } from \"@mui/material\"\nimport { useEffect, useState } from \"react\"\nimport { IQuestionTypes } from \"src/store/States/Survey/survey.types\"\n\ninterface IProp {\n  title?: string;\n  questionType: string;\n  fetchedChoices: any[]\n}\n\nconst AnswerElement = ({ questionType, title, fetchedChoices }: IProp) => {\n  const [choices, setChoices] = useState([\n    { idx: 0, value: \"Some things\" },\n    { idx: 1, value: \"JK things\" },\n    { idx: 2, value: \"JN things\" },\n    { idx: 3, value: \"LM things\" },\n  ])\n\n  useEffect(() => {\n    if (fetchedChoices.length > 0) {\n      setChoices(fetchedChoices.map(choice => ({ idx: Number(choice.id), value: choice.text })))\n    }\n  }, [fetchedChoices, setChoices])\n\n  const choiceLabels = ['A', 'B', 'C', 'D']\n\n  const getValue = (idx: number) => {\n    const index = choices.findIndex(choice => choice.idx === idx)\n    return index >= 0 ? choices[index].value : \"\"\n  }\n\n  return questionType === IQuestionTypes.INPUT ? (\n    <TextField\n      id=\"outlined-helperText\"\n      label=\"Title\"\n      style={{ width: 420 }}\n      value={title}\n      disabled\n    />\n  ) : questionType === IQuestionTypes.MULTIPLE_CHOICE ? (\n    <>\n      <div style={{ display: \"flex\", justifyContent: \"flex-start\", width: \"100%\" }}>\n        <TextField\n          id=\"outlined-helperText\"\n          label=\"Question\"\n          style={{ width: 340 }}  \n          value={title}\n          disabled\n        />\n      </div>\n      <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n        {choices.length <= 2 ?\n          choices.map((choice, idx) => (\n            <div style={{ display: \"flex\", alignItems: \"center\", marginRight: 70 }}>\n              <label>{choiceLabels[idx]}</label>\n              <TextField\n                id=\"outlined-helperText\"\n                style={{ width: 320 }}\n                value={getValue(choice.idx)}\n                disabled\n                variant=\"standard\"\n              />\n            </div>\n          )) : (\n            <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n              <div>\n                {choices.filter(item => item.idx < 2).map((choice, idx) => (\n                  <div style={{ display: \"flex\", alignItems: \"center\", marginRight: 70 }}>\n                    <label>{choiceLabels[idx]}</label>\n                    <TextField\n                      id=\"outlined-helperText\"\n                      style={{ width: 320 }}\n                      value={getValue(choice.idx)}\n                      disabled\n                      variant=\"standard\"\n                    />\n                  </div>\n                ))}\n              </div>\n              <div>\n                {choices.filter(item => item.idx >= 2).map((choice, idx) => (\n                  <div style={{ display: \"flex\", alignItems: \"center\", marginRight: 70 }}>\n                    <label>{choiceLabels[2 + idx]}</label>\n                    <TextField\n                      id=\"outlined-helperText\"\n                      style={{ width: 320 }}\n                      value={getValue(choice.idx)}\n                      disabled\n                      variant=\"standard\"\n                    />\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n      </div>\n    </>\n  ) : <></>\n}\n\nexport default AnswerElement","import { TextField } from \"@mui/material\"\n\ninterface IProp {\n  answers: string[]\n}\n\nconst InputAnswerElement = ({ answers }: IProp) => {\n  return (\n    <div style={{ height: 200, overflow: \"scroll\" }}>\n      {answers.map(answer => (\n        <TextField\n          id=\"outlined-input-answer\"\n          variant=\"standard\"\n          style={{ width: 420, backgroundColor: \"white\" }}\n          value={answer}\n          disabled\n        />\n      ))}\n    </div>\n  )\n}\n\nexport default InputAnswerElement","import { FC } from 'react';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\nimport { useTheme } from '@mui/material';\n\ninterface ChartProps {\n  data: any;\n  frequencies: number[];\n}\n\nconst AccountBalanceChart: FC<ChartProps> = ({ data: dataProp, frequencies, ...rest }) => {\n  const theme = useTheme();\n\n  const data = {\n    datasets: dataProp.datasets.map((dataset) => ({\n      ...dataset,\n      borderWidth: 10,\n      borderColor: theme.colors.alpha.white[100],\n      hoverBorderColor: theme.colors.alpha.white[30]\n    })),\n    labels: dataProp.labels\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    animation: false,\n    cutoutPercentage: 60,\n    legend: {\n      display: false\n    },\n    layout: {\n      padding: 0\n    },\n    tooltips: {\n      enabled: true,\n      caretSize: 6,\n      displayColors: false,\n      mode: 'label',\n      intersect: true,\n      yPadding: 8,\n      xPadding: 16,\n      borderWidth: 2,\n      bodySpacing: 10,\n      borderColor: theme.colors.alpha.black[30],\n      backgroundColor: theme.palette.common.white,\n      titleFontColor: theme.palette.common.black,\n      bodyFontColor: theme.palette.common.black,\n      footerFontColor: theme.palette.common.black,\n      callbacks: {\n        label(tooltipItem, _data) {\n          const label = _data.labels[tooltipItem.index];\n          const value = _data.datasets[0].data[tooltipItem.index];\n\n          return `${label}: ${value}%`;\n        }\n      }\n    }\n  };\n\n  let choices = ['A', 'B', 'C', 'D']\n\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n      <Doughnut data={data} options={options} {...rest} />\n      <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"center\" }}>\n        {frequencies.map((frequency, idx) => (\n          <p style={{ marginRight: 20 }}>{choices[idx]}: {frequency}</p>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nAccountBalanceChart.propTypes = {\n  data: PropTypes.object.isRequired\n};\n\nexport default AccountBalanceChart;","import { TextField } from \"@mui/material\"\nimport DoughnutElement from './doughnut_element'\n\ninterface IChoiceDoc {\n  id: number\n  text: string\n}\n\ninterface IProp {\n  answers: IChoiceDoc[]\n}\n\nconst ChoiceAnswerElement = ({ answers }: IProp) => {\n  let uniqueAnswers: IChoiceDoc[] = []\n  let frequencies: number[] = []\n  answers.forEach(answer => {\n    const index = uniqueAnswers.findIndex(ans => ans.id === answer.id)\n    if (index < 0) {\n      uniqueAnswers.push(answer)\n      frequencies.push(1)\n    } else {\n      frequencies[index] += 1\n    }\n  })\n\n  const graphData = {\n    datasets: [\n      {\n        data: frequencies.map(frequency => Math.floor((frequency / answers.length) * 100)),\n        backgroundColor: ['#ff9900', '#1c81c2', '#333', '#5c6ac0']\n      }\n    ],\n    labels: uniqueAnswers.map(answer => answer.text)\n  };\n\n  return (\n    <>\n      <DoughnutElement data={graphData} frequencies={frequencies} />\n    </>\n  )\n}\n\nexport default ChoiceAnswerElement","import { useState, useEffect } from 'react'\nimport { Card, Divider, CardContent, Box, TextField, MenuItem, Button } from \"@mui/material\"\nimport { IQuestionTypes } from \"src/store/States/Survey/survey.types\"\nimport AnswerElement from './answer_element'\nimport CloseIcon from '@mui/icons-material/CloseRounded';\nimport { SurveyContentTypes } from 'src/store/States/Survey/survey_content.types';\nimport InputAnswerElement from \"./input_answer_element\"\nimport ChoiceAnswerElement from \"./choice_answer_element\"\n\ninterface IProps {\n  data: any\n  answers: any[]\n}\n\nexport default ({\n  data, answers\n}: IProps) => {\n\n  const getQuestionAnswers = () => {\n    return answers.filter(answer => Number(answer.idx) === Number(data.idx))\n  }\n\n  useEffect(() => {\n    getQuestionAnswers()\n  }, [data, answers])\n\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n      <Card style={{ marginBottom: 25, width: \"45%\", marginRight: 80 }}>\n        <Divider />\n        <CardContent>\n          <Box\n            component=\"data\"\n            sx={{\n              '& .MuiTextField-root': { m: 1, width: '25ch' },\n            }}\n            style={{ display: \"flex\", justifyContent: \"space-between\", width: \"100%\" }}\n          >\n            <div aria-label=\"industry-input\">\n              <br />\n              <AnswerElement\n                questionType={data.questionType}\n                title={data.title}\n                fetchedChoices={data.choices? data.choices : []}\n              />\n            </div>\n          </Box>\n        </CardContent>\n      </Card>\n      <Card style={{ marginBottom: 25, width: \"40%\" }}>\n        <Divider />\n        <CardContent>\n          <Box\n            component=\"data\"\n            sx={{\n              '& .MuiTextField-root': { m: 1, width: '25ch' },\n            }}\n            style={{ display: \"flex\", justifyContent: \"space-between\", width: \"100%\" }}\n          >\n            <div aria-label=\"industry-input\">\n              <br />\n              {data.questionType === IQuestionTypes.INPUT ?\n                <InputAnswerElement answers={getQuestionAnswers().map(answer => answer.answerText)} /> :\n                <ChoiceAnswerElement\n                  answers={getQuestionAnswers().map(answer => ({\n                    id: Number(answer.choice.id),\n                    text: answer.choice.text\n                  }))}\n                />}\n            </div>\n          </Box>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}","import { Container, Grid, CardHeader } from \"@mui/material\"\nimport React, { useEffect, useState } from \"react\"\nimport { Helmet } from \"react-helmet-async\"\nimport PageTitle from \"src/components/PageTitle\"\nimport PageTitleWrapper from \"src/components/PageTitleWrapper\"\nimport { IQuestionTypes } from \"src/store/States/Survey/survey.types\"\nimport { ISurveyContentDoc } from \"src/store/States/Survey/survey_content.types\"\nimport SurveyContent from \"./survey_content\"\nimport {\n  FetchSurveyContentsBySurveyID, selectMainSurveyBuffer, selectChoicesBuffer, selectSelectedSurvey,\n  FetchSurveyReportsBySurveyID\n} from \"src/store/States/Survey\"\nimport { connect } from \"react-redux\"\nimport { ISurveyReportDoc } from \"src/store/States/Survey/survey_report.types\"\n\nconst SurveyContents = ({ selectedSurvey, choicesBuffer }) => {\n  const [questions, setQuestions] = useState([{\n    title: \"\",\n    questionType: String(IQuestionTypes.INPUT),\n    idx: 0\n  }])\n\n  const [answers, setAnswers] = useState([])\n\n  useEffect(() => {\n    FetchSurveyReportsBySurveyID(selectedSurvey, (err: any, data: ISurveyReportDoc[]) => {\n      if (err) throw err\n      let _Answers: any[] = []\n      data.forEach(report => {\n        report.ChoiceQASetAnswers.forEach(answer => {\n          _Answers.push({\n            questionType: IQuestionTypes.MULTIPLE_CHOICE,\n            choice: answer.choice,\n            answerText: \"\",\n            idx: Number(answer.orderNumber)\n          })\n        })\n        report.InputQASetAnswers.forEach(answer => {\n          _Answers.push({\n            questionType: IQuestionTypes.INPUT,\n            choice: {},\n            idx: Number(answer.orderNumber),\n            answerText: answer.answerDescription\n          })\n        })\n      })\n      setAnswers(_Answers)\n    })\n  }, [selectedSurvey, setAnswers])\n\n  useEffect(() => {\n    FetchSurveyContentsBySurveyID(selectedSurvey, (err: any, data: ISurveyContentDoc) => {\n      if (err) throw err\n      let _Questions: any[] = []\n      data.ChoiceQASetInputs.forEach(choiceQA => {\n        _Questions.push({\n          title: choiceQA.questionDescription,\n          questionType: IQuestionTypes.MULTIPLE_CHOICE,\n          idx: choiceQA.orderNumber,\n          choices: choiceQA.choices\n        })\n      })\n      data.InputQASetInputs.forEach(inputQA => {\n        _Questions.push({\n          title: inputQA.questionDescription,\n          questionType: IQuestionTypes.INPUT,\n          idx: inputQA.orderNumber,\n          choices: []\n        })\n      })\n      _Questions.sort((question1: any, question2: any) => question1.idx - question2.idx)\n      setQuestions(_Questions)\n    })\n  }, [setQuestions])\n\n  return (\n    <>\n      <Helmet>\n        <title>Survey Contents</title>\n      </Helmet>\n      <PageTitleWrapper>\n        <PageTitle\n          heading=\"Survey Contents\"\n          subHeading=\"Survey contents dependeing on your opinions.\"\n          noButton={true}\n        />\n      </PageTitleWrapper>\n      <form>\n        <Container maxWidth=\"lg\">\n          <Grid\n            container\n            direction=\"row\"\n            justifyContent=\"center\"\n            alignItems=\"stretch\"\n            spacing={3}\n          >\n            <Grid item xs={12}>\n              {/* <Card> */}\n              <Grid\n                direction=\"row\"\n                justifyContent=\"space-between\"\n                alignItems=\"stretch\"\n                display=\"flex\"\n              // style={{ display: \"flex\", justifyContent: \"space-evenly\" }}\n              >\n                <CardHeader title=\"Survey Questions\" />\n              </Grid>\n              {questions.map((question) => (\n                <SurveyContent\n                  data={question}\n                  answers={answers}\n                />\n              ))}\n            </Grid>\n          </Grid>\n        </Container>\n      </form>\n    </>\n  )\n}\n\nconst mapStateToProps = (state: any) => ({\n  mainSurveyBuffer: selectMainSurveyBuffer(state),\n  choicesBuffer: selectChoicesBuffer(state),\n  selectedSurvey: selectSelectedSurvey(state)\n})\n\nexport default connect(mapStateToProps)(SurveyContents)"],"sourceRoot":""}