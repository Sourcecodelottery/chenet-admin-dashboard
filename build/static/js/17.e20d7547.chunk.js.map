{"version":3,"sources":["components/PageTitleWrapper/index.tsx","../node_modules/@mui/icons-material/AddTwoTone.js","components/PageTitle/index.tsx","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","store/States/Survey/survey.types.ts","../node_modules/@mui/material/ListItemIcon/listItemIconClasses.js","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/material/MenuItem/menuItemClasses.js","../node_modules/@mui/material/MenuItem/MenuItem.js","../node_modules/@mui/icons-material/Remove.js","store/States/Survey/demography.ts","../node_modules/@mui/material/ButtonGroup/buttonGroupClasses.js","../node_modules/@mui/material/ButtonGroup/ButtonGroup.js","survey/CreateSurvey/index.tsx"],"names":["PageTitle","styled","Box","theme","spacing","PageTitleWrapper","children","maxWidth","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","heading","subHeading","docs","noButton","rest","container","justifyContent","alignItems","item","variant","component","gutterBottom","href","target","rel","sx","mt","xs","md","startIcon","fontSize","getCardContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardContentRoot","name","overridesResolver","props","styles","root","padding","paddingBottom","CardContent","React","inProps","ref","useThemeProps","className","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","_jsx","as","clsx","ISurveyType","IQuestionTypes","IGender","getListItemIconUtilityClass","listItemIconClasses","getMenuItemUtilityClass","menuItemClasses","MenuItemRoot","ButtonBase","shouldForwardProp","prop","rootShouldForwardProp","dense","divider","disableGutters","gutters","typography","body1","display","position","textDecoration","minHeight","paddingTop","boxSizing","whiteSpace","paddingLeft","paddingRight","borderBottom","palette","backgroundClip","backgroundColor","action","hover","selected","alpha","primary","main","selectedOpacity","focusVisible","focusOpacity","hoverOpacity","focus","disabled","opacity","disabledOpacity","dividerClasses","marginTop","marginBottom","inset","marginLeft","listItemTextClasses","minWidth","breakpoints","up","body2","MenuItem","autoFocus","focusVisibleClassName","role","tabIndexProp","tabIndex","context","ListContext","childContext","menuItemRef","useEnhancedEffect","current","slots","composedClasses","handleRef","useForkRef","undefined","Provider","genderTypes","demographyData","countries","regions","zones","targetingOptionsData","education","employementStatus","industry","studentStatus","maritialStatus","parentalStatus","getButtonGroupUtilityClass","buttonGroupClasses","ButtonGroupRoot","grouped","capitalize","orientation","color","disableElevation","fullWidth","vertical","borderRadius","shape","boxShadow","shadows","width","flexDirection","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderRight","mode","borderColor","borderRightColor","borderBottomColor","grey","dark","ButtonGroup","disableFocusRipple","disableRipple","size","map","child","connect","state","dispatch","saveMainSurveyBuffer","data","Actions","useForm","registerForm","register","handleSurveySubmit","handleSubmit","formErrors","formState","errors","control","useState","countryCount","setCountryCount","regionCount","setRegionCount","zoneCount","setZoneCount","educationCount","setEducationCount","employmentStatusCount","setEmploymentStatusCount","industryCount","setIndustryCount","parentalStatusCount","setParentalStatusCount","maritialStatusCount","setMaritialStatusCount","navigate","useNavigate","getHelperText","msgObject","idx","message","onSubmit","routes","SURVEY","CREATE_SURVE_CONTENTS","ROUTE","replace","direction","title","m","id","label","error","Boolean","helperText","required","select","surveyType","values","option","description","style","height","gender","ageLimit","min","max","Array","fill","_","demographicDetails","country","onClick","Math","region","zone","targetingOptions","employmentStatus","martialStatus","margin","type"],"mappings":"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","file":"static/js/17.e20d7547.chunk.js","sourcesContent":["import { FC, ReactNode } from 'react';\nimport { Container } from '@mui/material';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/material/styles';\nimport { Box } from '@mui/material';\n\nconst PageTitle = styled(Box)(\n  ({ theme }) => `\n        padding: ${theme.spacing(4, 0)};\n`\n);\n\ninterface PageTitleWrapperProps {\n  children?: ReactNode;\n}\n\nconst PageTitleWrapper: FC<PageTitleWrapperProps> = ({ children }) => {\n  return (\n    <>\n      <PageTitle>\n        <Container maxWidth=\"lg\">\n          {children}\n        </Container>\n      </PageTitle>\n    </>\n  );\n};\n\nPageTitleWrapper.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default PageTitleWrapper;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'AddTwoTone');\n\nexports.default = _default;","import { FC } from 'react';\nimport PropTypes from 'prop-types';\nimport AddTwoToneIcon from '@mui/icons-material/AddTwoTone';\nimport { Typography, Button, Grid } from '@mui/material';\n\ninterface PageTitleProps {\n    heading?: string;\n    subHeading?: string;\n    docs?: string;\n    noButton?: boolean;\n}\n\nconst PageTitle: FC<PageTitleProps> = ({\n    heading = '',\n    subHeading = '',\n    docs = '',\n    noButton = false,\n    ...rest\n}) => {\n    return (\n        <Grid container justifyContent=\"space-between\" alignItems=\"center\" {...rest}>\n            <Grid item>\n                <Typography variant=\"h3\" component=\"h3\" gutterBottom>\n                    {heading}\n                </Typography>\n                <Typography variant=\"subtitle2\">\n                    {subHeading}\n                </Typography>\n            </Grid>\n            {!noButton && <Grid item>\n                <Button\n                    href={docs}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    sx={{ mt: { xs: 2, md: 0 } }}\n                    variant=\"contained\"\n                    startIcon={<AddTwoToneIcon fontSize=\"small\" />}\n                >\n                    {heading}\n                </Button>\n            </Grid>}\n        </Grid>\n    );\n};\n\nPageTitle.propTypes = {\n    heading: PropTypes.string,\n    subHeading: PropTypes.string,\n    docs: PropTypes.string,\n};\n\nexport default PageTitle;\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\n\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n\n  const {\n    className,\n    component = 'div'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default CardContent;","export interface ISurvey {\n  _id: string\n  title: string\n  description: string\n  gender: IGender\n  demographicDetails: IDemographicDetails\n  ageLimit: IAgeLimit\n  ownerID: string\n  targetingOptions: ITargetingOptions\n  admins: string[]\n  surveyType: ISurveyType\n  consumerUsers: string[]\n  consumerLimit: number\n  unitCost: number\n}\n\nexport interface ISurveyInput {\n  title: string\n  description: string\n  gender: IGender\n  demographicDetails: IDemographicDetails\n  ageLimit: IAgeLimit\n  ownerID: string\n  targetingOptions: ITargetingOptions\n  surveyType: ISurveyType\n}\n\nexport type DemographyDetailsType = {\n  country: string[]\n  region: string[]\n  zone: string[]\n}\n\nexport type TargetingOptionsType = {\n  education: string[]\n  employmentStatus: string[]\n  industry: string[]\n  martialStatus: string[]\n  parentalStatus: string[]\n}\n\nexport type SurveyInputTypes = {\n  title: string\n  description: string\n  gender: IGender\n  demographicDetails: DemographyDetailsType\n  ageLimit: IAgeLimit\n  ownerID: string\n  targetingOptions: TargetingOptionsType\n  surveyType: ISurveyType\n}\n\nexport enum ISurveyType {\n  PRIVATE = \"PRIVATE\",\n  PUBLIC = \"PUBLIC\",\n  FOR_SALE = \"FOR SALE\",\n}\n\nexport enum IQuestionTypes {\n  MULTIPLE_CHOICE = \"MULTIPLE CHOICE\",\n  INPUT = \"INPUT\",\n  RANGE = \"RANGE\"\n}\n\nexport enum IGender {\n  \"MALE\" = \"MALE\",\n  \"FEMALE\" = \"FEMALE\"\n}\n\nexport interface IDemographicDetails {\n  country: string[]\n  region: string[]\n  zone: string[]\n}\n\nexport interface IAgeLimit {\n  max: number, min: number\n}\n\nexport interface ITargetingOptions {\n  education: string[]\n  employmentStatus: string[]\n  industry: string[]\n  martialStatus: string[]\n  parentalStatus: string[]\n}","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getListItemIconUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemIcon', slot);\n}\nconst listItemIconClasses = generateUtilityClasses('MuiListItemIcon', ['root', 'alignItemsFlexStart']);\nexport default listItemIconClasses;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getMenuItemUtilityClass(slot) {\n  return generateUtilityClass('MuiMenuItem', slot);\n}\nconst menuItemClasses = generateUtilityClasses('MuiMenuItem', ['root', 'focusVisible', 'dense', 'disabled', 'divider', 'gutters', 'selected']);\nexport default menuItemClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"component\", \"dense\", \"divider\", \"disableGutters\", \"focusVisibleClassName\", \"role\", \"tabIndex\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport { alpha } from '@mui/system';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ListContext from '../List/ListContext';\nimport ButtonBase from '../ButtonBase';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport useForkRef from '../utils/useForkRef';\nimport { dividerClasses } from '../Divider';\nimport { listItemIconClasses } from '../ListItemIcon';\nimport { listItemTextClasses } from '../ListItemText';\nimport menuItemClasses, { getMenuItemUtilityClass } from './menuItemClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, ownerState.dense && styles.dense, ownerState.divider && styles.divider, !ownerState.disableGutters && styles.gutters];\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    disabled,\n    dense,\n    divider,\n    disableGutters,\n    selected,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', dense && 'dense', disabled && 'disabled', !disableGutters && 'gutters', divider && 'divider', selected && 'selected']\n  };\n  const composedClasses = composeClasses(slots, getMenuItemUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst MenuItemRoot = styled(ButtonBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiMenuItem',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({}, theme.typography.body1, {\n  display: 'flex',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n  position: 'relative',\n  textDecoration: 'none',\n  minHeight: 48,\n  paddingTop: 6,\n  paddingBottom: 6,\n  boxSizing: 'border-box',\n  whiteSpace: 'nowrap'\n}, !ownerState.disableGutters && {\n  paddingLeft: 16,\n  paddingRight: 16\n}, ownerState.divider && {\n  borderBottom: `1px solid ${theme.palette.divider}`,\n  backgroundClip: 'padding-box'\n}, {\n  '&:hover': {\n    textDecoration: 'none',\n    backgroundColor: theme.palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  [`&.${menuItemClasses.selected}`]: {\n    backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    [`&.${menuItemClasses.focusVisible}`]: {\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  },\n  [`&.${menuItemClasses.selected}:hover`]: {\n    backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n    }\n  },\n  [`&.${menuItemClasses.focusVisible}`]: {\n    backgroundColor: theme.palette.action.focus\n  },\n  [`&.${menuItemClasses.disabled}`]: {\n    opacity: theme.palette.action.disabledOpacity\n  },\n  [`& + .${dividerClasses.root}`]: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  [`& + .${dividerClasses.inset}`]: {\n    marginLeft: 52\n  },\n  [`& .${listItemTextClasses.root}`]: {\n    marginTop: 0,\n    marginBottom: 0\n  },\n  [`& .${listItemTextClasses.inset}`]: {\n    paddingLeft: 36\n  },\n  [`& .${listItemIconClasses.root}`]: {\n    minWidth: 36\n  }\n}, !ownerState.dense && {\n  [theme.breakpoints.up('sm')]: {\n    minHeight: 'auto'\n  }\n}, ownerState.dense && _extends({\n  minHeight: 36\n}, theme.typography.body2, {\n  [`& .${listItemIconClasses.root} svg`]: {\n    fontSize: '1.25rem'\n  }\n})));\nconst MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiMenuItem'\n  });\n\n  const {\n    autoFocus = false,\n    component = 'li',\n    dense = false,\n    divider = false,\n    disableGutters = false,\n    focusVisibleClassName,\n    role = 'menuitem',\n    tabIndex: tabIndexProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const context = React.useContext(ListContext);\n  const childContext = {\n    dense: dense || context.dense || false,\n    disableGutters\n  };\n  const menuItemRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (autoFocus) {\n      if (menuItemRef.current) {\n        menuItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('MUI: Unable to set focus to a MenuItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n\n  const ownerState = _extends({}, props, {\n    dense: childContext.dense,\n    divider,\n    disableGutters\n  });\n\n  const classes = useUtilityClasses(props);\n  const handleRef = useForkRef(menuItemRef, ref);\n  let tabIndex;\n\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n\n  return /*#__PURE__*/_jsx(ListContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsx(MenuItemRoot, _extends({\n      ref: handleRef,\n      role: role,\n      tabIndex: tabIndex,\n      component: component,\n      focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName)\n    }, other, {\n      ownerState: ownerState,\n      classes: classes\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the list item is focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input is used.\n   * The prop defaults to the value inherited from the parent Menu component.\n   * @default false\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, a 1px light border is added to the bottom of the menu item.\n   * @default false\n   */\n  divider: PropTypes.bool,\n\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/master/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  role: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .string,\n\n  /**\n   * @ignore\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * @default 0\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default MenuItem;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\n\nexports.default = _default;","export const genderTypes = [\n  \"Male\", \"Female\"\n]\n\nexport const demographyData = {\n  countries: [\"Ethiopia\"],\n  regions: [\n    \"Addis Ababa\",\n    \"Afar\",\n    \"Amhara\",\n    \"Benshangul-Gumuz\",\n    \"Dire Dawa\",\n    \"Gambela\",\n    \"Harari\",\n    \"Oromia\",\n    \"Sidamo\",\n    \"Somali\",\n    \"SNNPR\",\n    \"Tigray\"\n  ],\n  zones: [\n    \"Addis Ketema\",\n    \"Akaki Kality\",\n    \"Arada\",\n    \"Bole\",\n    \"Gullele\",\n    \"Kirkos\",\n    \"Kolfe Keranyo\",\n    \"Lideta\",\n    \"Nifas Silk Lafto\",\n  ]\n}\n\nexport const targetingOptionsData = {\n  education: [\n    \"primary-school\",\n    \"a-high-school\",\n    \"f-high-school\",\n    \"a-college\",\n    \"f-college\",\n    \"post-grad\",\n  ],\n  employementStatus: [\n    \"all\",\n    \"employed part time\",\n    \"employed full time\",\n    \"not-employed-lfr\",\n    \"not-employed-nlfr\",\n    \"retired\",\n    \"disabled\",\n  ],\n  industry: [\n    \"all\",\n    \"adv\",\n    \"agri\",\n    \"airlines\",\n    \"auto\",\n    \"logistics\",\n    \"construction\",\n    \"edu\",\n    \"ent\",\n    \"finance\",\n    \"food\",\n    \"govt\",\n    \"health\",\n    \"insurance\",\n    \"manu\",\n    \"non-profit\",\n    \"retail\",\n    \"real-estate\",\n    \"tele\",\n    \"transport\",\n    \"utility\",\n  ],\n  studentStatus: [\n    \"grad-ft\",\n    \"grad-pt\",\n    \"un-grad-ft\",\n    \"un-grad-pt\",\n    \"high-school\",\n    \"not-a-student\",\n  ],\n  maritialStatus: [\n    \"married\",\n    \"widowed\",\n    \"divorced\",\n    \"separated\",\n    \"never married\"\n  ],\n  parentalStatus: [\n    \"no-children\",\n    \"parent\"\n  ]\n}","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getButtonGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiButtonGroup', slot);\n}\nconst buttonGroupClasses = generateUtilityClasses('MuiButtonGroup', ['root', 'contained', 'outlined', 'text', 'disableElevation', 'disabled', 'fullWidth', 'vertical', 'grouped', 'groupedHorizontal', 'groupedVertical', 'groupedText', 'groupedTextHorizontal', 'groupedTextVertical', 'groupedTextPrimary', 'groupedTextSecondary', 'groupedOutlined', 'groupedOutlinedHorizontal', 'groupedOutlinedVertical', 'groupedOutlinedPrimary', 'groupedOutlinedSecondary', 'groupedContained', 'groupedContainedHorizontal', 'groupedContainedVertical', 'groupedContainedPrimary', 'groupedContainedSecondary']);\nexport default buttonGroupClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"color\", \"component\", \"disabled\", \"disableElevation\", \"disableFocusRipple\", \"disableRipple\", \"fullWidth\", \"orientation\", \"size\", \"variant\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport { alpha } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport buttonGroupClasses, { getButtonGroupUtilityClass } from './buttonGroupClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [{\n    [`& .${buttonGroupClasses.grouped}`]: styles.grouped\n  }, {\n    [`& .${buttonGroupClasses.grouped}`]: styles[`grouped${capitalize(ownerState.orientation)}`]\n  }, {\n    [`& .${buttonGroupClasses.grouped}`]: styles[`grouped${capitalize(ownerState.variant)}`]\n  }, {\n    [`& .${buttonGroupClasses.grouped}`]: styles[`grouped${capitalize(ownerState.variant)}${capitalize(ownerState.orientation)}`]\n  }, {\n    [`& .${buttonGroupClasses.grouped}`]: styles[`grouped${capitalize(ownerState.variant)}${capitalize(ownerState.color)}`]\n  }, styles.root, styles[ownerState.variant], ownerState.disableElevation === true && styles.disableElevation, ownerState.fullWidth && styles.fullWidth, ownerState.orientation === 'vertical' && styles.vertical];\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    color,\n    disabled,\n    disableElevation,\n    fullWidth,\n    orientation,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, orientation === 'vertical' && 'vertical', fullWidth && 'fullWidth', disableElevation && 'disableElevation'],\n    grouped: ['grouped', `grouped${capitalize(orientation)}`, `grouped${capitalize(variant)}`, `grouped${capitalize(variant)}${capitalize(orientation)}`, `grouped${capitalize(variant)}${capitalize(color)}`, disabled && 'disabled']\n  };\n  return composeClasses(slots, getButtonGroupUtilityClass, classes);\n};\n\nconst ButtonGroupRoot = styled('div', {\n  name: 'MuiButtonGroup',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'inline-flex',\n  borderRadius: theme.shape.borderRadius\n}, ownerState.variant === 'contained' && {\n  boxShadow: theme.shadows[2]\n}, ownerState.disableElevation && {\n  boxShadow: 'none'\n}, ownerState.fullWidth && {\n  width: '100%'\n}, ownerState.orientation === 'vertical' && {\n  flexDirection: 'column'\n}, {\n  [`& .${buttonGroupClasses.grouped}`]: _extends({\n    minWidth: 40,\n    '&:not(:first-of-type)': _extends({}, ownerState.orientation === 'horizontal' && {\n      borderTopLeftRadius: 0,\n      borderBottomLeftRadius: 0\n    }, ownerState.orientation === 'vertical' && {\n      borderTopRightRadius: 0,\n      borderTopLeftRadius: 0\n    }, ownerState.variant === 'outlined' && ownerState.orientation === 'horizontal' && {\n      marginLeft: -1\n    }, ownerState.variant === 'outlined' && ownerState.orientation === 'vertical' && {\n      marginTop: -1\n    }),\n    '&:not(:last-of-type)': _extends({}, ownerState.orientation === 'horizontal' && {\n      borderTopRightRadius: 0,\n      borderBottomRightRadius: 0\n    }, ownerState.orientation === 'vertical' && {\n      borderBottomRightRadius: 0,\n      borderBottomLeftRadius: 0\n    }, ownerState.variant === 'text' && ownerState.orientation === 'horizontal' && {\n      borderRight: `1px solid ${theme.palette.mode === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'}`\n    }, ownerState.variant === 'text' && ownerState.orientation === 'vertical' && {\n      borderBottom: `1px solid ${theme.palette.mode === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'}`\n    }, ownerState.variant === 'text' && ownerState.color !== 'inherit' && {\n      borderColor: alpha(theme.palette[ownerState.color].main, 0.5)\n    }, ownerState.variant === 'outlined' && ownerState.orientation === 'horizontal' && {\n      borderRightColor: 'transparent'\n    }, ownerState.variant === 'outlined' && ownerState.orientation === 'vertical' && {\n      borderBottomColor: 'transparent'\n    }, ownerState.variant === 'contained' && ownerState.orientation === 'horizontal' && {\n      borderRight: `1px solid ${theme.palette.grey[400]}`,\n      [`&.${buttonGroupClasses.disabled}`]: {\n        borderRight: `1px solid ${theme.palette.action.disabled}`\n      }\n    }, ownerState.variant === 'contained' && ownerState.orientation === 'vertical' && {\n      borderBottom: `1px solid ${theme.palette.grey[400]}`,\n      [`&.${buttonGroupClasses.disabled}`]: {\n        borderBottom: `1px solid ${theme.palette.action.disabled}`\n      }\n    }, ownerState.variant === 'contained' && ownerState.color !== 'inherit' && {\n      borderColor: theme.palette[ownerState.color].dark\n    }),\n    '&:hover': _extends({}, ownerState.variant === 'outlined' && ownerState.color !== 'inherit' && {\n      borderColor: theme.palette[ownerState.color].main\n    }, ownerState.variant === 'contained' && {\n      boxShadow: 'none'\n    })\n  }, ownerState.variant === 'contained' && {\n    boxShadow: 'none'\n  })\n}));\nconst ButtonGroup = /*#__PURE__*/React.forwardRef(function ButtonGroup(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiButtonGroup'\n  });\n\n  const {\n    children,\n    className,\n    color = 'primary',\n    component = 'div',\n    disabled = false,\n    disableElevation = false,\n    disableFocusRipple = false,\n    disableRipple = false,\n    fullWidth = false,\n    orientation = 'horizontal',\n    size = 'medium',\n    variant = 'outlined'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    disabled,\n    disableElevation,\n    disableFocusRipple,\n    disableRipple,\n    fullWidth,\n    orientation,\n    size,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ButtonGroupRoot, _extends({\n    as: component,\n    role: \"group\",\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: React.Children.map(children, child => {\n      if (! /*#__PURE__*/React.isValidElement(child)) {\n        return null;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (isFragment(child)) {\n          console.error([\"MUI: The ButtonGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n        }\n      }\n\n      return /*#__PURE__*/React.cloneElement(child, {\n        className: clsx(classes.grouped, child.props.className),\n        color: child.props.color || color,\n        disabled: child.props.disabled || disabled,\n        disableElevation: child.props.disableElevation || disableElevation,\n        disableFocusRipple,\n        disableRipple,\n        fullWidth,\n        size: child.props.size || size,\n        variant: child.props.variant || variant\n      });\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ButtonGroup.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, no elevation is used.\n   * @default false\n   */\n  disableElevation: PropTypes.bool,\n\n  /**\n   * If `true`, the button keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the button ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the buttons will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The component orientation (layout flow direction).\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense button styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The variant to use.\n   * @default 'outlined'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['contained', 'outlined', 'text']), PropTypes.string])\n} : void 0;\nexport default ButtonGroup;","import { Container, Grid, Card, CardHeader, Divider, CardContent, Box, TextField, MenuItem, Button, ButtonGroup } from \"@mui/material\"\nimport { useState } from \"react\"\nimport { Helmet } from \"react-helmet-async\"\nimport PageTitle from \"src/components/PageTitle\"\nimport PageTitleWrapper from \"src/components/PageTitleWrapper\"\nimport { ISurveyType, SurveyInputTypes } from \"src/store/States/Survey/survey.types\"\nimport AddIcon from '@mui/icons-material/Add';\nimport { useForm } from \"react-hook-form\"\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport { useNavigate } from \"react-router\"\nimport routes from \"src/constants/routes\"\nimport { connect } from \"react-redux\"\nimport { Actions } from \"src/store/States/Survey/\"\nimport { demographyData, targetingOptionsData, genderTypes } from \"src/store/States/Survey/demography\"\n\nconst CreateSurvey = ({ saveMainSurveyBuffer }) => {\n  const { register: registerForm, handleSubmit: handleSurveySubmit, formState: { errors: formErrors }, control } = useForm<SurveyInputTypes>();\n  const [countryCount, setCountryCount] = useState(1)\n  const [regionCount, setRegionCount] = useState(1)\n  const [zoneCount, setZoneCount] = useState(1)\n\n  const [educationCount, setEducationCount] = useState(1)\n  const [employmentStatusCount, setEmploymentStatusCount] = useState(1)\n  const [industryCount, setIndustryCount] = useState(1)\n  const [parentalStatusCount, setParentalStatusCount] = useState(1)\n  const [maritialStatusCount, setMaritialStatusCount] = useState(1)\n\n  const navigate = useNavigate();\n\n  const onSubmit = (data: SurveyInputTypes) => {\n    saveMainSurveyBuffer(data)\n    navigate(routes.SURVEY.CREATE_SURVE_CONTENTS.ROUTE, { replace: true })\n  }\n\n  const getHelperText = (msgObject: any, idx: number) => {\n    return msgObject[idx]?\n      msgObject[idx].message? msgObject[idx].message : \"\"\n      : \"\"\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>Create Survey</title>\n      </Helmet>\n      <PageTitleWrapper>\n        <PageTitle\n          heading=\"Create Survey\"\n          subHeading=\"Create survey dependeing on your demography and targeting options.\"\n          noButton={true}\n        />\n      </PageTitleWrapper>\n      <form onSubmit={handleSurveySubmit(onSubmit)}>\n        <Container maxWidth=\"lg\">\n          <Grid\n            container\n            direction=\"row\"\n            justifyContent=\"center\"\n            alignItems=\"stretch\"\n            spacing={3}\n          >\n            <Grid item xs={12}>\n              <Card>\n                <CardHeader title=\"Survey Details\" />\n                <Divider />\n                <CardContent>\n                  <Box\n                    component=\"data\"\n                    sx={{\n                      '& .MuiTextField-root': { m: 1, width: '25ch' },\n                    }}\n                  >\n                    <div>\n                      <TextField\n                        id=\"outlined-helperText\"\n                        label=\"Title\"\n                        error={Boolean(formErrors.title)}\n                        helperText={formErrors.title? formErrors.title.message : \"\"}\n                        {...registerForm(\"title\", { required: \"Title is required\" })}\n                      />\n                      <TextField\n                        id=\"outlined-select-currency\"\n                        select\n                        label=\"Select Survey Type\"\n                        error={Boolean(formErrors.surveyType)}\n                        helperText={formErrors.surveyType? formErrors.surveyType.message : \"\"}\n                        {...registerForm(\"surveyType\", { required: \"Survey Type is required\" })}\n                      >\n                        {Object.values(ISurveyType).map((option) => (\n                          <MenuItem key={option} value={option}>\n                            {option}\n                          </MenuItem>\n                        ))}\n                      </TextField>\n                      <br />\n                      <TextField\n                        id=\"outlined-helperText\"\n                        label=\"Description\"\n                        error={Boolean(formErrors.description)}\n                        helperText={formErrors.description? formErrors.description.message : \"\"}\n                        {...registerForm(\"description\", { required: \"Description is required\" })}\n                        style={{\n                          width: 800,\n                          height: 100\n                        }}\n                      />\n                      <CardHeader title=\"Person Specifications\" />\n                      <Divider />\n                      <div>\n                        <TextField\n                          id=\"outlined-select-gender\"\n                          select\n                          label=\"Select Gender\"\n                          error={Boolean(formErrors.gender)}\n                          helperText={formErrors.gender? formErrors.gender.message : \"\"}\n                          {...registerForm(\"gender\", { required: \"Gender is required\" })}\n                        >\n                          {genderTypes.map((option) => (\n                            <MenuItem key={option} value={option}>\n                              {option}\n                            </MenuItem>\n                          ))}\n                        </TextField>\n                        <TextField\n                          id=\"outlined-select-min-age\"\n                          label=\"Select Min Age\"\n                          error={Boolean(\n                            formErrors.ageLimit? formErrors.ageLimit.min : false\n                          )}\n                          helperText={\n                            formErrors.ageLimit?\n                              formErrors.ageLimit.min? formErrors.ageLimit.min.message : \"\"\n                              : \"\"\n                          }\n                          {...registerForm(\"ageLimit.min\", { required: \"Min Age is required\" })}\n                        >\n                        </TextField>\n                        <TextField\n                          id=\"outlined-select-max-age\"\n                          label=\"Select Max Age\"\n                          error={Boolean(\n                            formErrors.ageLimit? formErrors.ageLimit.max : false\n                          )}\n                          helperText={\n                            formErrors.ageLimit?\n                              formErrors.ageLimit.max? formErrors.ageLimit.max.message : \"\"\n                              : \"\"\n                          }\n                          {...registerForm(\"ageLimit.max\", { required: \"Max Age is required\" })}\n                        >\n                        </TextField>\n                      </div>\n                    </div>\n                  </Box>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item xs={12}>\n              <Card>\n                <CardHeader title=\"Your Demography\" />\n                <Divider />\n                <CardContent>\n                  <Box\n                    sx={{\n                      '& .MuiTextField-root': { m: 1, width: '25ch' },\n                    }}\n                  >\n                    <div>\n                      <div aria-label=\"country-input\">\n                        {Array(countryCount).fill(\"\").map((_, idx) => (\n                          <TextField\n                            id=\"outlined-select-country\"\n                            select\n                            label=\"Select Country\"\n                            error={\n                              formErrors.demographicDetails?\n                                formErrors.demographicDetails.country? Boolean(formErrors.demographicDetails.country): false\n                                : false\n                            }\n                            helperText={\n                              formErrors.demographicDetails?\n                                formErrors.demographicDetails.country? getHelperText(formErrors.demographicDetails.country, idx): \"\"\n                                : \"\"\n                            }\n                            {...registerForm(`demographicDetails.country.${idx}`, { required: \"Country is required\" })}\n                          >\n                            {demographyData.countries.map((option) => (\n                              <MenuItem key={option} value={option}>\n                                {option}\n                              </MenuItem>\n                            ))}\n                          </TextField>\n                        ))}\n                        <ButtonGroup style={{ marginTop: 15 }}>\n                          <Button\n                            aria-label=\"reduce\"\n                            onClick={() => {\n                              setCountryCount(Math.max(countryCount - 1, 1));\n                            }}\n                          >\n                            <RemoveIcon fontSize=\"small\" />\n                          </Button>\n                          <Button\n                            aria-label=\"increase\"\n                            onClick={() => {\n                              setCountryCount(countryCount + 1);\n                            }}\n                          >\n                            <AddIcon fontSize=\"small\" />\n                          </Button>\n                        </ButtonGroup>\n                      </div>\n                      <div aria-label=\"region-input\">\n                        {Array(regionCount).fill(\"\").map((_, idx) => (\n                          <TextField\n                            id=\"outlined-select-region\"\n                            select\n                            label=\"Select Region\"\n                            error={\n                              formErrors.demographicDetails?\n                                formErrors.demographicDetails.region? Boolean(formErrors.demographicDetails.region): false\n                                : false\n                            }\n                            helperText={\n                              formErrors.demographicDetails?\n                                formErrors.demographicDetails.region? getHelperText(formErrors.demographicDetails.region, idx): \"\"\n                                : \"\"\n                            }\n                            {...registerForm(`demographicDetails.region.${idx}`, { required: \"Region is required\" })}\n                          >\n                            {demographyData.regions.map((option) => (\n                              <MenuItem key={option} value={option}>\n                                {option}\n                              </MenuItem>\n                            ))}\n                          </TextField>\n                        ))}\n                        <ButtonGroup style={{ marginTop: 15 }}>\n                          <Button\n                            aria-label=\"reduce\"\n                            onClick={() => {\n                              setRegionCount(Math.max(regionCount - 1, 1));\n                            }}\n                          >\n                            <RemoveIcon fontSize=\"small\" />\n                          </Button>\n                          <Button\n                            aria-label=\"increase\"\n                            onClick={() => {\n                              setRegionCount(regionCount + 1);\n                            }}\n                          >\n                            <AddIcon fontSize=\"small\" />\n                          </Button>\n                        </ButtonGroup>\n                      </div>\n                      <div aria-label=\"zone-input\">\n                        {Array(zoneCount).fill(\"\").map((_, idx) => (\n                          <TextField\n                            id=\"outlined-select-zone\"\n                            select\n                            label=\"Select Zone\"\n                            error={\n                              formErrors.demographicDetails?\n                                formErrors.demographicDetails.zone? Boolean(formErrors.demographicDetails.zone): false\n                                : false\n                            }\n                            helperText={\n                              formErrors.demographicDetails?\n                                formErrors.demographicDetails.zone? getHelperText(formErrors.demographicDetails.zone, idx): \"\"\n                                : \"\"\n                            }\n                            {...registerForm(`demographicDetails.zone.${idx}`, { required: \"Zone is required\" })}\n                          >\n                            {demographyData.zones.map((option) => (\n                              <MenuItem key={option} value={option}>\n                                {option}\n                              </MenuItem>\n                            ))}\n                          </TextField>\n                        ))}\n                        <ButtonGroup style={{ marginTop: 15 }}>\n                          <Button\n                            aria-label=\"reduce\"\n                            onClick={() => {\n                              setZoneCount(Math.max(zoneCount - 1, 1));\n                            }}\n                          >\n                            <RemoveIcon fontSize=\"small\" />\n                          </Button>\n                          <Button\n                            aria-label=\"increase\"\n                            onClick={() => {\n                              setZoneCount(zoneCount + 1);\n                            }}\n                          >\n                            <AddIcon fontSize=\"small\" />\n                          </Button>\n                        </ButtonGroup>\n                      </div>\n                    </div>\n                  </Box>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item xs={12}>\n              <Card>\n                <CardHeader title=\"Your Targeting Options\" />\n                <Divider />\n                <CardContent>\n                  <Box\n                    sx={{\n                      '& .MuiTextField-root': { m: 1, width: '25ch' },\n                    }}\n                  >\n                    <div>\n                      <div aria-label=\"education-input\">\n                        {Array(educationCount).fill(\"\").map((_, idx) => (\n                          <TextField\n                            id=\"outlined-select-education\"\n                            select\n                            label=\"Select Education\"\n                            error={\n                              formErrors.targetingOptions?\n                                formErrors.targetingOptions.education? Boolean(formErrors.targetingOptions.education): false\n                                : false\n                            }\n                            helperText={\n                              formErrors.targetingOptions?\n                                formErrors.targetingOptions.education? getHelperText(formErrors.targetingOptions.education, idx): \"\"\n                                : \"\"\n                            }\n                            {...registerForm(`targetingOptions.education.${idx}`, { required: \"Education is required\" })}\n                          >\n                            {targetingOptionsData.education.map((option) => (\n                              <MenuItem key={option} value={option}>\n                                {option}\n                              </MenuItem>\n                            ))}\n                          </TextField>\n                        ))}\n                        <ButtonGroup style={{ marginTop: 15 }}>\n                          <Button\n                            aria-label=\"reduce\"\n                            onClick={() => {\n                              setEducationCount(Math.max(educationCount - 1, 1));\n                            }}\n                          >\n                            <RemoveIcon fontSize=\"small\" />\n                          </Button>\n                          <Button\n                            aria-label=\"increase\"\n                            onClick={() => {\n                              setEducationCount(educationCount + 1);\n                            }}\n                          >\n                            <AddIcon fontSize=\"small\" />\n                          </Button>\n                        </ButtonGroup>\n                      </div>\n                      <div aria-label=\"employment-status-input\">\n                        {Array(employmentStatusCount).fill(\"\").map((_, idx) => (\n                          <TextField\n                            id=\"outlined-select-employment-status\"\n                            select\n                            label=\"Select Employment Status\"\n                            error={\n                              formErrors.targetingOptions?\n                                formErrors.targetingOptions.employmentStatus? Boolean(formErrors.targetingOptions.employmentStatus): false\n                                : false\n                            }\n                            helperText={\n                              formErrors.targetingOptions?\n                                formErrors.targetingOptions.employmentStatus? getHelperText(formErrors.targetingOptions.employmentStatus, idx): \"\"\n                                : \"\"\n                            }\n                            {...registerForm(`targetingOptions.employmentStatus.${idx}`, { required: \"Employment Status is required\" })}\n                          >\n                            {targetingOptionsData.employementStatus.map((option) => (\n                              <MenuItem key={option} value={option}>\n                                {option}\n                              </MenuItem>\n                            ))}\n                          </TextField>\n                        ))}\n                        <ButtonGroup style={{ marginTop: 15 }}>\n                          <Button\n                            aria-label=\"reduce\"\n                            onClick={() => {\n                              setEmploymentStatusCount(Math.max(employmentStatusCount - 1, 1));\n                            }}\n                          >\n                            <RemoveIcon fontSize=\"small\" />\n                          </Button>\n                          <Button\n                            aria-label=\"increase\"\n                            onClick={() => {\n                              setEmploymentStatusCount(employmentStatusCount + 1);\n                            }}\n                          >\n                            <AddIcon fontSize=\"small\" />\n                          </Button>\n                        </ButtonGroup>\n                      </div>\n                      <div aria-label=\"industry-input\">\n                        {Array(industryCount).fill(\"\").map((_, idx) => (\n                          <TextField\n                            id=\"outlined-select-industry\"\n                            select\n                            label=\"Select Industry\"\n                            error={\n                              formErrors.targetingOptions?\n                                formErrors.targetingOptions.industry? Boolean(formErrors.targetingOptions.industry): false\n                                : false\n                            }\n                            helperText={\n                              formErrors.targetingOptions?\n                                formErrors.targetingOptions.industry? getHelperText(formErrors.targetingOptions.industry, idx): \"\"\n                                : \"\"\n                            }\n                            {...registerForm(`targetingOptions.industry.${idx}`, { required: \"Industry is required\" })}\n                          >\n                            {targetingOptionsData.industry.map((option) => (\n                              <MenuItem key={option} value={option}>\n                                {option}\n                              </MenuItem>\n                            ))}\n                          </TextField>\n                        ))}\n                        <ButtonGroup style={{ marginTop: 15 }}>\n                          <Button\n                            aria-label=\"reduce\"\n                            onClick={() => {\n                              setIndustryCount(Math.max(industryCount - 1, 1));\n                            }}\n                          >\n                            <RemoveIcon fontSize=\"small\" />\n                          </Button>\n                          <Button\n                            aria-label=\"increase\"\n                            onClick={() => {\n                              setIndustryCount(industryCount + 1);\n                            }}\n                          >\n                            <AddIcon fontSize=\"small\" />\n                          </Button>\n                        </ButtonGroup>\n                      </div>\n                      <div aria-label=\"parental-status-input\">\n                        {Array(parentalStatusCount).fill(\"\").map((_, idx) => (\n                          <TextField\n                            id=\"outlined-select-parental-status\"\n                            select\n                            label=\"Select Parental Status\"\n                            error={\n                              formErrors.targetingOptions?\n                                formErrors.targetingOptions.parentalStatus? Boolean(formErrors.targetingOptions.parentalStatus): false\n                                : false\n                            }\n                            helperText={\n                              formErrors.targetingOptions?\n                                formErrors.targetingOptions.parentalStatus? getHelperText(formErrors.targetingOptions.parentalStatus, idx): \"\"\n                                : \"\"\n                            }\n                            {...registerForm(`targetingOptions.parentalStatus.${idx}`, { required: \"Parental Status is required\" })}\n                          >\n                            {targetingOptionsData.parentalStatus.map((option) => (\n                              <MenuItem key={option} value={option}>\n                                {option}\n                              </MenuItem>\n                            ))}\n                          </TextField>\n                        ))}\n                        <ButtonGroup style={{ marginTop: 15 }}>\n                          <Button\n                            aria-label=\"reduce\"\n                            onClick={() => {\n                              setParentalStatusCount(Math.max(parentalStatusCount - 1, 1));\n                            }}\n                          >\n                            <RemoveIcon fontSize=\"small\" />\n                          </Button>\n                          <Button\n                            aria-label=\"increase\"\n                            onClick={() => {\n                              setParentalStatusCount(parentalStatusCount + 1);\n                            }}\n                          >\n                            <AddIcon fontSize=\"small\" />\n                          </Button>\n                        </ButtonGroup>\n                      </div>\n                      <div aria-label=\"maritial-status-input\">\n                        {Array(maritialStatusCount).fill(\"\").map((_, idx) => (\n                          <TextField\n                            id=\"outlined-select-maritial-status\"\n                            select\n                            label=\"Select Maritial Status\"\n                            error={\n                              formErrors.targetingOptions?\n                                formErrors.targetingOptions.martialStatus? Boolean(formErrors.targetingOptions.martialStatus): false\n                                : false\n                            }\n                            helperText={\n                              formErrors.targetingOptions?\n                                formErrors.targetingOptions.martialStatus? getHelperText(formErrors.targetingOptions.martialStatus, idx): \"\"\n                                : \"\"\n                            }\n                            {...registerForm(`targetingOptions.martialStatus.${idx}`, { required: \"Maritial Status is required\" })}\n                          >\n                            {targetingOptionsData.maritialStatus.map((option) => (\n                              <MenuItem key={option} value={option}>\n                                {option}\n                              </MenuItem>\n                            ))}\n                          </TextField>\n                        ))}\n                        <ButtonGroup style={{ marginTop: 15 }}>\n                          <Button\n                            aria-label=\"reduce\"\n                            onClick={() => {\n                              setMaritialStatusCount(Math.max(maritialStatusCount - 1, 1));\n                            }}\n                          >\n                            <RemoveIcon fontSize=\"small\" />\n                          </Button>\n                          <Button\n                            aria-label=\"increase\"\n                            onClick={() => {\n                              setMaritialStatusCount(maritialStatusCount + 1);\n                            }}\n                          >\n                            <AddIcon fontSize=\"small\" />\n                          </Button>\n                        </ButtonGroup>\n                      </div>\n                    </div>\n                  </Box>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item xs={12}>\n              <Card>\n                <CardContent>\n                  <Box\n                    sx={{\n                      '& .MuiTextField-root': { m: 1, width: '25ch' },\n                    }}\n                    style={{ display: \"flex\", justifyContent: \"space-evenly\" }}\n                  >\n                    <Button\n                      sx={{ margin: 1 }} variant=\"contained\" color=\"primary\" type=\"submit\"\n                      // onClick={() => navigate(routes.SURVEY.CREATE_SURVE_CONTENTS.ROUTE, { replace: true })}\n                    >\n                      Create Survey Contents\n                    </Button>\n                    <Button sx={{ margin: 1 }} variant=\"contained\" color=\"secondary\" type=\"button\">\n                      Go Back\n                    </Button>\n                  </Box>\n                </CardContent>\n              </Card>\n            </Grid>\n          </Grid>\n        </Container>\n      </form>\n    </>\n  )\n}\n\nconst mapStateToProps = (state: any) => ({})\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  saveMainSurveyBuffer: (data: any) => dispatch(Actions.saveMainSurveyBuffer(data))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateSurvey)"],"sourceRoot":""}