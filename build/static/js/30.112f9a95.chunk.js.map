{"version":3,"sources":["components/PageTitleWrapper/index.tsx","../node_modules/@mui/icons-material/AddTwoTone.js","components/PageTitle/index.tsx","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","store/States/Survey/survey.types.ts","../node_modules/@mui/material/ListItemIcon/listItemIconClasses.js","../node_modules/@mui/material/MenuItem/menuItemClasses.js","../node_modules/@mui/material/MenuItem/MenuItem.js","store/States/Survey/demography.ts","../node_modules/@mui/icons-material/RemoveRedEyeRounded.js","survey/SingleSurvey/index.tsx"],"names":["PageTitle","styled","Box","theme","spacing","PageTitleWrapper","children","maxWidth","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","heading","subHeading","docs","noButton","rest","container","justifyContent","alignItems","item","variant","component","gutterBottom","href","target","rel","sx","mt","xs","md","startIcon","fontSize","getCardContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardContentRoot","name","overridesResolver","props","styles","root","padding","paddingBottom","CardContent","React","inProps","ref","useThemeProps","className","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","_jsx","as","clsx","ISurveyType","IQuestionTypes","IGender","getListItemIconUtilityClass","listItemIconClasses","getMenuItemUtilityClass","menuItemClasses","MenuItemRoot","ButtonBase","shouldForwardProp","prop","rootShouldForwardProp","dense","divider","disableGutters","gutters","typography","body1","display","position","textDecoration","minHeight","paddingTop","boxSizing","whiteSpace","paddingLeft","paddingRight","borderBottom","palette","backgroundClip","backgroundColor","action","hover","selected","alpha","primary","main","selectedOpacity","focusVisible","focusOpacity","hoverOpacity","focus","disabled","opacity","disabledOpacity","dividerClasses","marginTop","marginBottom","inset","marginLeft","listItemTextClasses","minWidth","breakpoints","up","body2","MenuItem","autoFocus","focusVisibleClassName","role","tabIndexProp","tabIndex","context","ListContext","childContext","menuItemRef","useEnhancedEffect","current","slots","composedClasses","handleRef","useForkRef","undefined","Provider","genderTypes","demographyData","countries","regions","zones","targetingOptionsData","education","employementStatus","industry","studentStatus","maritialStatus","parentalStatus","connect","state","selectedSurvey","selectSelectedSurvey","dispatch","saveSelectedSurveyContents","data","Actions","useState","_id","title","description","gender","MALE","demographicDetails","country","region","zone","ageLimit","max","min","ownerID","targetingOptions","employmentStatus","martialStatus","admins","surveyType","PUBLIC","consumerUsers","consumerLimit","unitCost","surveyDetails","setSurveyDetails","navigate","useNavigate","useEffect","FetchOneSurvey","err","direction","margin","color","type","onClick","routes","SURVEY","SINGLE_SURVEY_CONTENTS","ROUTE","replace","m","width","id","label","select","values","map","option","style","height","idx"],"mappings":"yHACA,oCAKMA,EAAYC,YAAOC,IAAPD,EAChB,gBAAGE,EAAH,EAAGA,MAAH,mCACiBA,EAAMC,QAAQ,EAAG,GADlC,UAyBaC,IAhBqC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACrD,OACE,mCACE,cAACN,EAAD,UACE,cAAC,IAAD,CAAWO,SAAS,KAApB,SACGD,U,iCCnBX,IAAIE,EAAyBC,EAAQ,IAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAAiBP,EAAuBC,EAAQ,KAEhDO,EAAcP,EAAQ,GAEtBQ,GAAW,EAAIF,EAAeD,UAAuB,EAAIE,EAAYE,KAAK,OAAQ,CACpFC,EAAG,wCACD,cAEJP,EAAQE,QAAUG,G,sJCkCHjB,IAvCuB,SAAC,GAMhC,IAAD,IALFoB,eAKE,MALQ,GAKR,MAJFC,kBAIE,MAJW,GAIX,MAHFC,YAGE,MAHK,GAGL,MAFFC,gBAEE,SADCC,EACD,iBACF,OACI,eAAC,IAAD,yBAAMC,WAAS,EAACC,eAAe,gBAAgBC,WAAW,UAAaH,GAAvE,cACI,eAAC,IAAD,CAAMI,MAAI,EAAV,UACI,cAAC,IAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAKC,cAAY,EAApD,SACKX,IAEL,cAAC,IAAD,CAAYS,QAAQ,YAApB,SACKR,QAGPE,GAAY,cAAC,IAAD,CAAMK,MAAI,EAAV,SACV,cAAC,IAAD,CACII,KAAMV,EACNW,OAAO,SACPC,IAAI,sBACJC,GAAI,CAAEC,GAAI,CAAEC,GAAI,EAAGC,GAAI,IACvBT,QAAQ,YACRU,UAAW,cAAC,IAAD,CAAgBC,SAAS,UANxC,SAQKpB,Y,mHCrCd,SAASqB,EAA2BC,GACzC,OAAOC,YAAqB,iBAAkBD,GAErBE,YAAuB,iBAAkB,CAAC,SAArE,I,OCFMC,EAAY,CAAC,YAAa,aAoB1BC,EAAkB7C,YAAO,MAAO,CACpC8C,KAAM,iBACNL,KAAM,OACNM,kBAAmB,SAACC,EAAOC,GAAR,OAAmBA,EAAOC,OAHvBlD,EAIrB,WACD,MAAO,CACLmD,QAAS,GACT,eAAgB,CACdC,cAAe,QAIfC,EAA2BC,cAAiB,SAAqBC,EAASC,GAC9E,IAAMR,EAAQS,YAAc,CAC1BT,MAAOO,EACPT,KAAM,mBAINY,EAEEV,EAFFU,UADF,EAGIV,EADFnB,iBAFF,MAEc,MAFd,EAIM8B,EAAQC,YAA8BZ,EAAOJ,GAE7CiB,EAAaC,YAAS,GAAId,EAAO,CACrCnB,cAGIkC,EAtCkB,SAAAF,GACxB,IACEE,EACEF,EADFE,QAKF,OAAOC,YAHO,CACZd,KAAM,CAAC,SAEoBV,EAA4BuB,GA+BzCE,CAAkBJ,GAClC,OAAoBK,cAAKrB,EAAiBiB,YAAS,CACjDK,GAAItC,EACJ6B,UAAWU,YAAKL,EAAQb,KAAMQ,GAC9BG,WAAYA,EACZL,IAAKA,GACJG,OAoCUN,O,iCCxCR,IAAKgB,EAMAC,EAMAC,EAZZ,sG,SAAYF,K,kBAAAA,E,gBAAAA,E,qBAAAA,M,cAMAC,K,kCAAAA,E,cAAAA,E,eAAAA,M,cAMAC,K,YAAAA,E,iBAAAA,M,uCChEZ,wDACO,SAASC,EAA4B/B,GAC1C,OAAOC,YAAqB,kBAAmBD,GAEjD,IAAMgC,EAAsB9B,YAAuB,kBAAmB,CAAC,OAAQ,wBAChE8B,O,+LCJR,SAASC,EAAwBjC,GACtC,OAAOC,YAAqB,cAAeD,GAE7C,IACekC,EADShC,YAAuB,cAAe,CAAC,OAAQ,eAAgB,QAAS,WAAY,UAAW,UAAW,a,OCF5HC,EAAY,CAAC,YAAa,YAAa,QAAS,UAAW,iBAAkB,wBAAyB,OAAQ,YAwC9GgC,EAAe5E,YAAO6E,IAAY,CACtCC,kBAAmB,SAAAC,GAAI,OAAIC,YAAsBD,IAAkB,YAATA,GAC1DjC,KAAM,cACNL,KAAM,OACNM,kBA3B+B,SAACC,EAAOC,GACvC,IACEY,EACEb,EADFa,WAEF,MAAO,CAACZ,EAAOC,KAAMW,EAAWoB,OAAShC,EAAOgC,MAAOpB,EAAWqB,SAAWjC,EAAOiC,SAAUrB,EAAWsB,gBAAkBlC,EAAOmC,WAmB/GpF,EAKlB,kBACDE,EADC,EACDA,MACA2D,EAFC,EAEDA,WAFC,OAGGC,YAAS,GAAI5D,EAAMmF,WAAWC,MAAO,CACzCC,QAAS,OACT9D,eAAgB,aAChBC,WAAY,SACZ8D,SAAU,WACVC,eAAgB,OAChBC,UAAW,GACXC,WAAY,EACZvC,cAAe,EACfwC,UAAW,aACXC,WAAY,WACVhC,EAAWsB,gBAAkB,CAC/BW,YAAa,GACbC,aAAc,IACblC,EAAWqB,SAAW,CACvBc,aAAc,aAAF,OAAe9F,EAAM+F,QAAQf,SACzCgB,eAAgB,gBAhBJ,GAkBZ,UAAW,CACTT,eAAgB,OAChBU,gBAAiBjG,EAAM+F,QAAQG,OAAOC,MAEtC,uBAAwB,CACtBF,gBAAiB,iBAvBT,0BA0BNxB,EAAgB2B,UA1BV,aA2BVH,gBAAiBI,YAAMrG,EAAM+F,QAAQO,QAAQC,KAAMvG,EAAM+F,QAAQG,OAAOM,kBA3B9D,YA4BJ/B,EAAgBgC,cAAiB,CACrCR,gBAAiBI,YAAMrG,EAAM+F,QAAQO,QAAQC,KAAMvG,EAAM+F,QAAQG,OAAOM,gBAAkBxG,EAAM+F,QAAQG,OAAOQ,iBA7BvG,0BAgCNjC,EAAgB2B,SAhCV,UAgC6B,CACvCH,gBAAiBI,YAAMrG,EAAM+F,QAAQO,QAAQC,KAAMvG,EAAM+F,QAAQG,OAAOM,gBAAkBxG,EAAM+F,QAAQG,OAAOS,cAE/G,uBAAwB,CACtBV,gBAAiBI,YAAMrG,EAAM+F,QAAQO,QAAQC,KAAMvG,EAAM+F,QAAQG,OAAOM,oBApChE,0BAuCN/B,EAAgBgC,cAAiB,CACrCR,gBAAiBjG,EAAM+F,QAAQG,OAAOU,QAxC5B,0BA0CNnC,EAAgBoC,UAAa,CACjCC,QAAS9G,EAAM+F,QAAQG,OAAOa,kBA3CpB,6BA6CHC,IAAehE,MAAS,CAC/BiE,UAAWjH,EAAMC,QAAQ,GACzBiH,aAAclH,EAAMC,QAAQ,KA/ClB,6BAiDH+G,IAAeG,OAAU,CAChCC,WAAY,KAlDF,2BAoDLC,IAAoBrE,MAAS,CAClCiE,UAAW,EACXC,aAAc,IAtDJ,2BAwDLG,IAAoBF,OAAU,CACnCvB,YAAa,KAzDH,2BA2DLrB,IAAoBvB,MAAS,CAClCsE,SAAU,KA5DA,IA8DV3D,EAAWoB,OAAZ,eACA/E,EAAMuH,YAAYC,GAAG,MAAQ,CAC5BhC,UAAW,SAEZ7B,EAAWoB,OAASnB,YAAS,CAC9B4B,UAAW,IACVxF,EAAMmF,WAAWsC,MAFW,4BAGtBlD,IAAoBvB,KAHE,QAGW,CACtCX,SAAU,iBAGRqF,EAAwBtE,cAAiB,SAAkBC,EAASC,GACxE,IAAMR,EAAQS,YAAc,CAC1BT,MAAOO,EACPT,KAAM,gBAGR,EASIE,EARF6E,iBADF,WASI7E,EAPFnB,iBAFF,MAEc,KAFd,IASImB,EANFiC,aAHF,WASIjC,EALFkC,eAJF,WASIlC,EAJFmC,sBALF,SAME2C,EAGE9E,EAHF8E,sBANF,EASI9E,EAFF+E,YAPF,MAOS,WAPT,EAQYC,EACRhF,EADFiF,SAEItE,EAAQC,YAA8BZ,EAAOJ,GAE7CsF,EAAU5E,aAAiB6E,KAC3BC,EAAe,CACnBnD,MAAOA,GAASiD,EAAQjD,QAAS,EACjCE,kBAEIkD,EAAc/E,SAAa,MACjCgF,aAAkB,WACZT,GACEQ,EAAYE,SACdF,EAAYE,QAAQzB,UAKvB,CAACe,IAEJ,IAQII,EAREpE,EAAaC,YAAS,GAAId,EAAO,CACrCiC,MAAOmD,EAAanD,MACpBC,UACAC,mBAGIpB,EAzIkB,SAAAF,GACxB,IACEkD,EAMElD,EANFkD,SACA9B,EAKEpB,EALFoB,MACAC,EAIErB,EAJFqB,QACAC,EAGEtB,EAHFsB,eACAmB,EAEEzC,EAFFyC,SACAvC,EACEF,EADFE,QAEIyE,EAAQ,CACZtF,KAAM,CAAC,OAAQ+B,GAAS,QAAS8B,GAAY,YAAa5B,GAAkB,UAAWD,GAAW,UAAWoB,GAAY,aAErHmC,EAAkBzE,YAAewE,EAAO9D,EAAyBX,GACvE,OAAOD,YAAS,GAAIC,EAAS0E,GA4HbxE,CAAkBjB,GAC5B0F,EAAYC,YAAWN,EAAa7E,GAO1C,OAJKR,EAAM+D,WACTkB,OAA4BW,IAAjBZ,EAA6BA,GAAgB,GAGtC9D,cAAKiE,IAAYU,SAAU,CAC7CjI,MAAOwH,EACP/H,SAAuB6D,cAAKU,EAAcd,YAAS,CACjDN,IAAKkF,EACLX,KAAMA,EACNE,SAAUA,EACVpG,UAAWA,EACXiG,sBAAuB1D,YAAKL,EAAQ4C,aAAcmB,IACjDnE,EAAO,CACRE,WAAYA,EACZE,QAASA,UA2FA6D,O,iCChRf,sGAAO,IAAMkB,EAAc,CACzB,OAAQ,UAGGC,EAAiB,CAC5BC,UAAW,CAAC,YACZC,QAAS,CACP,cACA,OACA,SACA,mBACA,YACA,UACA,SACA,SACA,SACA,SACA,QACA,UAEFC,MAAO,CACL,eACA,eACA,QACA,OACA,UACA,SACA,gBACA,SACA,qBAISC,EAAuB,CAClCC,UAAW,CACT,iBACA,gBACA,gBACA,YACA,YACA,aAEFC,kBAAmB,CACjB,MACA,qBACA,qBACA,mBACA,oBACA,UACA,YAEFC,SAAU,CACR,MACA,MACA,OACA,WACA,OACA,YACA,eACA,MACA,MACA,UACA,OACA,OACA,SACA,YACA,OACA,aACA,SACA,cACA,OACA,YACA,WAEFC,cAAe,CACb,UACA,UACA,aACA,aACA,cACA,iBAEFC,eAAgB,CACd,UACA,UACA,WACA,YACA,iBAEFC,eAAgB,CACd,cACA,Y,iCCzFJ,IAAIlJ,EAAyBC,EAAQ,IAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAAiBP,EAAuBC,EAAQ,KAEhDO,EAAcP,EAAQ,GAEtBQ,GAAW,EAAIF,EAAeD,UAAuB,EAAIE,EAAYE,KAAK,OAAQ,CACpFC,EAAG,sNACD,uBAEJP,EAAQE,QAAUG,G,6PCkVH0I,uBARS,SAACC,GAAD,MAAiB,CACvCC,eAAgBC,YAAqBF,OAGZ,SAACG,GAAD,MAAoB,CAC7CC,2BAA4B,SAACC,GAAD,OAAeF,EAASG,IAAQF,2BAA2BC,QAG1EN,EAtVM,SAAC,GAAmD,EAAjDK,2BAAkD,IAAtBH,EAAqB,EAArBA,eAClD,EAA0CM,mBAAkB,CAC1DC,IAAK,GACLC,MAAO,GACPC,YAAa,GACbC,OAAQ/F,IAAQgG,KAChBC,mBAAoB,CAClBC,QAAS,GAAIC,OAAQ,GAAIC,KAAM,IAEjCC,SAAU,CACRC,IAAK,EAAGC,IAAK,GAEfC,QAAS,GACTC,iBAAkB,CAChB5B,UAAW,GACX6B,iBAAkB,GAClB3B,SAAU,GACV4B,cAAe,GACfzB,eAAgB,IAElB0B,OAAQ,GACRC,WAAY/G,IAAYgH,OACxBC,cAAe,GACfC,cAAe,EACfC,SAAU,IAvBZ,mBAAOC,EAAP,KAAsBC,EAAtB,KA0BMC,EAAWC,cAejB,OAPAC,qBAAU,WACRC,YAAelC,GAAgB,SAACmC,EAAU/B,GACxC,GAAI+B,EAAK,MAAMA,EACfL,EAAiB1B,QAElB,IAGD,qCACE,cAAC,IAAD,UACE,kDAEF,cAAC,IAAD,UACE,cAAC,IAAD,CACE7I,QAAQ,cACRC,WAAW,mEACXE,UAAU,MAGd,+BACE,cAAC,IAAD,CAAWhB,SAAS,KAApB,SACE,eAAC,IAAD,CACEkB,WAAS,EACTwK,UAAU,MACVvK,eAAe,SACfC,WAAW,UACXvB,QAAS,EALX,UAOE,cAAC,IAAD,CAAMwB,MAAI,EAACS,GAAI,GAAf,SACE,eAAC,IAAD,WACE,eAAC,IAAD,CACE4J,UAAU,MACVvK,eAAe,gBACfC,WAAW,UACX6D,QAAQ,OAJV,UAME,cAAC,IAAD,CAAY6E,MAAM,mBAClB,eAAC,IAAD,CACElI,GAAI,CAAE+J,OAAQ,GAAKrK,QAAQ,YAAYsK,MAAM,UAAUC,KAAK,SAC5DC,QAAS,WAEPT,EAASU,IAAOC,OAAOC,uBAAuBC,MAAO,CAAEC,SAAS,KAJpE,UAME,cAAC,IAAD,CAAUlK,SAAS,UANrB,6BAUF,cAAC,IAAD,IACA,cAAC,IAAD,UACE,cAAC,IAAD,CACEV,UAAU,OACVK,GAAI,CACF,uBAAwB,CAAEwK,EAAG,EAAGC,MAAO,SAH3C,SAME,gCACE,cAAC,IAAD,CACEC,GAAG,sBACHC,MAAM,QACN9F,UAAQ,EACRnG,MAAO6K,EAAcrB,QAEvB,cAAC,IAAD,CACEwC,GAAG,2BACHE,QAAM,EACND,MAAM,qBACN9F,UAAQ,EACRnG,MAAO6K,EAAcL,WALvB,SAOG3K,OAAOsM,OAAO1I,KAAa2I,KAAI,SAACC,GAAD,OAC9B,cAAC,IAAD,CAAuBrM,MAAOqM,EAA9B,SACGA,GADYA,QAKnB,uBACA,cAAC,IAAD,CACEL,GAAG,sBACHC,MAAM,cACNK,MAAO,CACLP,MAAO,IACPQ,OAAQ,KAEVpG,UAAQ,EACRnG,MAAO6K,EAAcpB,cAEvB,cAAC,IAAD,CAAYD,MAAM,0BAClB,cAAC,IAAD,IACA,gCACE,cAAC,IAAD,CACEwC,GAAG,yBACHE,QAAM,EACND,MAAM,gBACN9F,UAAQ,EACRnG,MAAO6K,EAAcnB,OALvB,SAOGxB,IAAYkE,KAAI,SAACC,GAAD,OACf,cAAC,IAAD,CAAuBrM,MAAOqM,EAA9B,SACGA,GADYA,QAKnB,cAAC,IAAD,CACEL,GAAG,0BACHC,MAAM,iBACNV,KAAK,SACLpF,UAAQ,EACRnG,MAAO6K,EAAcb,SAASE,MAGhC,cAAC,IAAD,CACEqB,KAAK,SACLS,GAAG,0BACHC,MAAM,iBACNjM,MAAO6K,EAAcb,SAASE,IAC9B/D,UAAQ,mBAStB,cAAC,IAAD,CAAMpF,MAAI,EAACS,GAAI,GAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAYgI,MAAM,oBAClB,cAAC,IAAD,IACA,cAAC,IAAD,UACE,cAAC,IAAD,CACElI,GAAI,CACF,uBAAwB,CAAEwK,EAAG,EAAGC,MAAO,SAF3C,SAKE,gCACE,qBAAK,aAAW,gBAAhB,SACGlB,EAAcjB,mBAAmBC,QAAQuC,KAAI,SAACpM,EAAOwM,GAAR,OAC5C,cAAC,IAAD,CACER,GAAG,0BACHE,QAAM,EACND,MAAM,iBACNjM,MAAOA,EACPmG,UAAQ,EALV,SAOGgC,IAAeC,UAAUgE,KAAI,SAACC,GAAD,OAC5B,cAAC,IAAD,CAAuBrM,MAAOqM,EAA9B,SACGA,GADYA,aAOvB,qBAAK,aAAW,eAAhB,SACGxB,EAAcjB,mBAAmBE,OAAOsC,KAAI,SAACpM,EAAOwM,GAAR,OAC3C,cAAC,IAAD,CACER,GAAG,yBACHE,QAAM,EACND,MAAM,gBACNjM,MAAOA,EACPmG,UAAQ,EALV,SAOGgC,IAAeE,QAAQ+D,KAAI,SAACC,GAAD,OAC1B,cAAC,IAAD,CAAuBrM,MAAOqM,EAA9B,SACGA,GADYA,aAOvB,qBAAK,aAAW,aAAhB,SACGxB,EAAcjB,mBAAmBG,KAAKqC,KAAI,SAACpM,EAAOwM,GAAR,OACzC,cAAC,IAAD,CACER,GAAG,uBACHE,QAAM,EACND,MAAM,cACNjM,MAAOA,EACPmG,UAAQ,EALV,SAOGgC,IAAeG,MAAM8D,KAAI,SAACC,GAAD,OACxB,cAAC,IAAD,CAAuBrM,MAAOqM,EAA9B,SACGA,GADYA,yBAYjC,cAAC,IAAD,CAAMtL,MAAI,EAACS,GAAI,GAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAYgI,MAAM,2BAClB,cAAC,IAAD,IACA,cAAC,IAAD,UACE,cAAC,IAAD,CACElI,GAAI,CACF,uBAAwB,CAAEwK,EAAG,EAAGC,MAAO,SAF3C,SAKE,gCACE,qBAAK,aAAW,kBAAhB,SACGlB,EAAcT,iBAAiB5B,UAAU4D,KAAI,SAACpM,EAAOwM,GAAR,OAC5C,cAAC,IAAD,CACER,GAAG,4BACHE,QAAM,EACND,MAAM,mBACNjM,MAAOA,EACPmG,UAAQ,EALV,SAOGoC,IAAqBC,UAAU4D,KAAI,SAACC,GAAD,OAClC,cAAC,IAAD,CAAuBrM,MAAOqM,EAA9B,SACGA,GADYA,aAOvB,qBAAK,aAAW,0BAAhB,SACGxB,EAAcT,iBAAiBC,iBAAiB+B,KAAI,SAACpM,EAAOwM,GAAR,OACnD,cAAC,IAAD,CACER,GAAG,oCACHE,QAAM,EACND,MAAM,2BACNjM,MAAOA,EACPmG,UAAQ,EALV,SAOGoC,IAAqBE,kBAAkB2D,KAAI,SAACC,GAAD,OAC1C,cAAC,IAAD,CAAuBrM,MAAOqM,EAA9B,SACGA,GADYA,aAOvB,qBAAK,aAAW,iBAAhB,SACGxB,EAAcT,iBAAiB1B,SAAS0D,KAAI,SAACpM,EAAOwM,GAAR,OAC3C,cAAC,IAAD,CACER,GAAG,2BACHE,QAAM,EACND,MAAM,kBACNjM,MAAOA,EACPmG,UAAQ,EALV,SAOGoC,IAAqBG,SAAS0D,KAAI,SAACC,GAAD,OACjC,cAAC,IAAD,CAAuBrM,MAAOqM,EAA9B,SACGA,GADYA,aAOvB,qBAAK,aAAW,wBAAhB,SACGxB,EAAcT,iBAAiBvB,eAAeuD,KAAI,SAACpM,EAAOwM,GAAR,OACjD,cAAC,IAAD,CACER,GAAG,kCACHE,QAAM,EACND,MAAM,yBACNjM,MAAOA,EACPmG,UAAQ,EALV,SAOGoC,IAAqBM,eAAeuD,KAAI,SAACC,GAAD,OACvC,cAAC,IAAD,CAAuBrM,MAAOqM,EAA9B,SACGA,GADYA,aAOvB,qBAAK,aAAW,wBAAhB,SACGxB,EAAcT,iBAAiBE,cAAc8B,KAAI,SAACpM,EAAOwM,GAAR,OAChD,cAAC,IAAD,CACER,GAAG,kCACHE,QAAM,EACND,MAAM,yBACNjM,MAAOA,EACPmG,UAAQ,EALV,SAOGoC,IAAqBK,eAAewD,KAAI,SAACC,GAAD,OACvC,cAAC,IAAD,CAAuBrM,MAAOqM,EAA9B,SACGA,GADYA","file":"static/js/30.112f9a95.chunk.js","sourcesContent":["import { FC, ReactNode } from 'react';\nimport { Container } from '@mui/material';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/material/styles';\nimport { Box } from '@mui/material';\n\nconst PageTitle = styled(Box)(\n  ({ theme }) => `\n        padding: ${theme.spacing(4, 0)};\n`\n);\n\ninterface PageTitleWrapperProps {\n  children?: ReactNode;\n}\n\nconst PageTitleWrapper: FC<PageTitleWrapperProps> = ({ children }) => {\n  return (\n    <>\n      <PageTitle>\n        <Container maxWidth=\"lg\">\n          {children}\n        </Container>\n      </PageTitle>\n    </>\n  );\n};\n\nPageTitleWrapper.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default PageTitleWrapper;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'AddTwoTone');\n\nexports.default = _default;","import { FC } from 'react';\nimport PropTypes from 'prop-types';\nimport AddTwoToneIcon from '@mui/icons-material/AddTwoTone';\nimport { Typography, Button, Grid } from '@mui/material';\n\ninterface PageTitleProps {\n    heading?: string;\n    subHeading?: string;\n    docs?: string;\n    noButton?: boolean;\n}\n\nconst PageTitle: FC<PageTitleProps> = ({\n    heading = '',\n    subHeading = '',\n    docs = '',\n    noButton = false,\n    ...rest\n}) => {\n    return (\n        <Grid container justifyContent=\"space-between\" alignItems=\"center\" {...rest}>\n            <Grid item>\n                <Typography variant=\"h3\" component=\"h3\" gutterBottom>\n                    {heading}\n                </Typography>\n                <Typography variant=\"subtitle2\">\n                    {subHeading}\n                </Typography>\n            </Grid>\n            {!noButton && <Grid item>\n                <Button\n                    href={docs}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    sx={{ mt: { xs: 2, md: 0 } }}\n                    variant=\"contained\"\n                    startIcon={<AddTwoToneIcon fontSize=\"small\" />}\n                >\n                    {heading}\n                </Button>\n            </Grid>}\n        </Grid>\n    );\n};\n\nPageTitle.propTypes = {\n    heading: PropTypes.string,\n    subHeading: PropTypes.string,\n    docs: PropTypes.string,\n};\n\nexport default PageTitle;\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\n\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n\n  const {\n    className,\n    component = 'div'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default CardContent;","export interface ISurvey {\n  _id: string\n  title: string\n  description: string\n  gender: IGender\n  demographicDetails: IDemographicDetails\n  ageLimit: IAgeLimit\n  ownerID: string\n  targetingOptions: ITargetingOptions\n  admins: string[]\n  surveyType: ISurveyType\n  consumerUsers: string[]\n  consumerLimit: number\n  unitCost: number\n}\n\nexport interface ISurveyInput {\n  title: string\n  description: string\n  gender: IGender\n  demographicDetails: IDemographicDetails\n  ageLimit: IAgeLimit\n  ownerID: string\n  targetingOptions: ITargetingOptions\n  surveyType: ISurveyType\n}\n\nexport type DemographyDetailsType = {\n  country: string[]\n  region: string[]\n  zone: string[]\n}\n\nexport type TargetingOptionsType = {\n  education: string[]\n  employmentStatus: string[]\n  industry: string[]\n  martialStatus: string[]\n  parentalStatus: string[]\n}\n\nexport type SurveyInputTypes = {\n  title: string\n  description: string\n  gender: IGender\n  demographicDetails: DemographyDetailsType\n  ageLimit: IAgeLimit\n  ownerID: string\n  targetingOptions: TargetingOptionsType\n  surveyType: ISurveyType\n}\n\nexport enum ISurveyType {\n  PRIVATE = \"PRIVATE\",\n  PUBLIC = \"PUBLIC\",\n  FOR_SALE = \"FOR SALE\",\n}\n\nexport enum IQuestionTypes {\n  MULTIPLE_CHOICE = \"MULTIPLE CHOICE\",\n  INPUT = \"INPUT\",\n  RANGE = \"RANGE\"\n}\n\nexport enum IGender {\n  \"MALE\" = \"MALE\",\n  \"FEMALE\" = \"FEMALE\"\n}\n\nexport interface IDemographicDetails {\n  country: string[]\n  region: string[]\n  zone: string[]\n}\n\nexport interface IAgeLimit {\n  max: number, min: number\n}\n\nexport interface ITargetingOptions {\n  education: string[]\n  employmentStatus: string[]\n  industry: string[]\n  martialStatus: string[]\n  parentalStatus: string[]\n}","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getListItemIconUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemIcon', slot);\n}\nconst listItemIconClasses = generateUtilityClasses('MuiListItemIcon', ['root', 'alignItemsFlexStart']);\nexport default listItemIconClasses;","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getMenuItemUtilityClass(slot) {\n  return generateUtilityClass('MuiMenuItem', slot);\n}\nconst menuItemClasses = generateUtilityClasses('MuiMenuItem', ['root', 'focusVisible', 'dense', 'disabled', 'divider', 'gutters', 'selected']);\nexport default menuItemClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"component\", \"dense\", \"divider\", \"disableGutters\", \"focusVisibleClassName\", \"role\", \"tabIndex\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport { alpha } from '@mui/system';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ListContext from '../List/ListContext';\nimport ButtonBase from '../ButtonBase';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport useForkRef from '../utils/useForkRef';\nimport { dividerClasses } from '../Divider';\nimport { listItemIconClasses } from '../ListItemIcon';\nimport { listItemTextClasses } from '../ListItemText';\nimport menuItemClasses, { getMenuItemUtilityClass } from './menuItemClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, ownerState.dense && styles.dense, ownerState.divider && styles.divider, !ownerState.disableGutters && styles.gutters];\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    disabled,\n    dense,\n    divider,\n    disableGutters,\n    selected,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', dense && 'dense', disabled && 'disabled', !disableGutters && 'gutters', divider && 'divider', selected && 'selected']\n  };\n  const composedClasses = composeClasses(slots, getMenuItemUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst MenuItemRoot = styled(ButtonBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiMenuItem',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({}, theme.typography.body1, {\n  display: 'flex',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n  position: 'relative',\n  textDecoration: 'none',\n  minHeight: 48,\n  paddingTop: 6,\n  paddingBottom: 6,\n  boxSizing: 'border-box',\n  whiteSpace: 'nowrap'\n}, !ownerState.disableGutters && {\n  paddingLeft: 16,\n  paddingRight: 16\n}, ownerState.divider && {\n  borderBottom: `1px solid ${theme.palette.divider}`,\n  backgroundClip: 'padding-box'\n}, {\n  '&:hover': {\n    textDecoration: 'none',\n    backgroundColor: theme.palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  [`&.${menuItemClasses.selected}`]: {\n    backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    [`&.${menuItemClasses.focusVisible}`]: {\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  },\n  [`&.${menuItemClasses.selected}:hover`]: {\n    backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n    }\n  },\n  [`&.${menuItemClasses.focusVisible}`]: {\n    backgroundColor: theme.palette.action.focus\n  },\n  [`&.${menuItemClasses.disabled}`]: {\n    opacity: theme.palette.action.disabledOpacity\n  },\n  [`& + .${dividerClasses.root}`]: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  [`& + .${dividerClasses.inset}`]: {\n    marginLeft: 52\n  },\n  [`& .${listItemTextClasses.root}`]: {\n    marginTop: 0,\n    marginBottom: 0\n  },\n  [`& .${listItemTextClasses.inset}`]: {\n    paddingLeft: 36\n  },\n  [`& .${listItemIconClasses.root}`]: {\n    minWidth: 36\n  }\n}, !ownerState.dense && {\n  [theme.breakpoints.up('sm')]: {\n    minHeight: 'auto'\n  }\n}, ownerState.dense && _extends({\n  minHeight: 36\n}, theme.typography.body2, {\n  [`& .${listItemIconClasses.root} svg`]: {\n    fontSize: '1.25rem'\n  }\n})));\nconst MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiMenuItem'\n  });\n\n  const {\n    autoFocus = false,\n    component = 'li',\n    dense = false,\n    divider = false,\n    disableGutters = false,\n    focusVisibleClassName,\n    role = 'menuitem',\n    tabIndex: tabIndexProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const context = React.useContext(ListContext);\n  const childContext = {\n    dense: dense || context.dense || false,\n    disableGutters\n  };\n  const menuItemRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (autoFocus) {\n      if (menuItemRef.current) {\n        menuItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('MUI: Unable to set focus to a MenuItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n\n  const ownerState = _extends({}, props, {\n    dense: childContext.dense,\n    divider,\n    disableGutters\n  });\n\n  const classes = useUtilityClasses(props);\n  const handleRef = useForkRef(menuItemRef, ref);\n  let tabIndex;\n\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n\n  return /*#__PURE__*/_jsx(ListContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsx(MenuItemRoot, _extends({\n      ref: handleRef,\n      role: role,\n      tabIndex: tabIndex,\n      component: component,\n      focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName)\n    }, other, {\n      ownerState: ownerState,\n      classes: classes\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the list item is focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input is used.\n   * The prop defaults to the value inherited from the parent Menu component.\n   * @default false\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, a 1px light border is added to the bottom of the menu item.\n   * @default false\n   */\n  divider: PropTypes.bool,\n\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/master/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  role: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .string,\n\n  /**\n   * @ignore\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * @default 0\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default MenuItem;","export const genderTypes = [\n  \"Male\", \"Female\"\n]\n\nexport const demographyData = {\n  countries: [\"Ethiopia\"],\n  regions: [\n    \"Addis Ababa\",\n    \"Afar\",\n    \"Amhara\",\n    \"Benshangul-Gumuz\",\n    \"Dire Dawa\",\n    \"Gambela\",\n    \"Harari\",\n    \"Oromia\",\n    \"Sidamo\",\n    \"Somali\",\n    \"SNNPR\",\n    \"Tigray\"\n  ],\n  zones: [\n    \"Addis Ketema\",\n    \"Akaki Kality\",\n    \"Arada\",\n    \"Bole\",\n    \"Gullele\",\n    \"Kirkos\",\n    \"Kolfe Keranyo\",\n    \"Lideta\",\n    \"Nifas Silk Lafto\",\n  ]\n}\n\nexport const targetingOptionsData = {\n  education: [\n    \"primary-school\",\n    \"a-high-school\",\n    \"f-high-school\",\n    \"a-college\",\n    \"f-college\",\n    \"post-grad\",\n  ],\n  employementStatus: [\n    \"all\",\n    \"employed part time\",\n    \"employed full time\",\n    \"not-employed-lfr\",\n    \"not-employed-nlfr\",\n    \"retired\",\n    \"disabled\",\n  ],\n  industry: [\n    \"all\",\n    \"adv\",\n    \"agri\",\n    \"airlines\",\n    \"auto\",\n    \"logistics\",\n    \"construction\",\n    \"edu\",\n    \"ent\",\n    \"finance\",\n    \"food\",\n    \"govt\",\n    \"health\",\n    \"insurance\",\n    \"manu\",\n    \"non-profit\",\n    \"retail\",\n    \"real-estate\",\n    \"tele\",\n    \"transport\",\n    \"utility\",\n  ],\n  studentStatus: [\n    \"grad-ft\",\n    \"grad-pt\",\n    \"un-grad-ft\",\n    \"un-grad-pt\",\n    \"high-school\",\n    \"not-a-student\",\n  ],\n  maritialStatus: [\n    \"married\",\n    \"widowed\",\n    \"divorced\",\n    \"separated\",\n    \"never married\"\n  ],\n  parentalStatus: [\n    \"no-children\",\n    \"parent\"\n  ]\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'RemoveRedEyeRounded');\n\nexports.default = _default;","import { Container, Grid, Card, CardHeader, Divider, CardContent, Box, TextField, MenuItem, Button, ButtonGroup } from \"@mui/material\"\nimport { useState, useEffect } from \"react\"\nimport { Helmet } from \"react-helmet-async\"\nimport PageTitle from \"src/components/PageTitle\"\nimport PageTitleWrapper from \"src/components/PageTitleWrapper\"\nimport { IGender, ISurvey, ISurveyType, SurveyInputTypes } from \"src/store/States/Survey/survey.types\"\nimport { useNavigate } from \"react-router\"\nimport routes from \"src/constants/routes\"\nimport { connect } from \"react-redux\"\nimport { Actions, selectSelectedSurvey, FetchOneSurvey } from \"src/store/States/Survey/\"\nimport { demographyData, targetingOptionsData, genderTypes } from \"src/store/States/Survey/demography\"\nimport ViewIcon from \"@mui/icons-material/RemoveRedEyeRounded\"\n\nconst CreateSurvey = ({ saveSelectedSurveyContents, selectedSurvey }) => {\n  const [surveyDetails, setSurveyDetails] = useState<ISurvey>({\n    _id: \"\",\n    title: \"\",\n    description: \"\",\n    gender: IGender.MALE,\n    demographicDetails: {\n      country: [], region: [], zone: []\n    },\n    ageLimit: {\n      max: 0, min: 0\n    },\n    ownerID: \"\",\n    targetingOptions: {\n      education: [],\n      employmentStatus: [],\n      industry: [],\n      martialStatus: [],\n      parentalStatus: []\n    },\n    admins: [],\n    surveyType: ISurveyType.PUBLIC,\n    consumerUsers: [],\n    consumerLimit: 0,\n    unitCost: 0\n  })\n\n  const navigate = useNavigate();\n\n  const getHelperText = (msgObject: any, idx: number) => {\n    return msgObject[idx] ?\n      msgObject[idx].message ? msgObject[idx].message : \"\"\n      : \"\"\n  }\n\n  useEffect(() => {\n    FetchOneSurvey(selectedSurvey, (err: any, data: ISurvey) => {\n      if (err) throw err\n      setSurveyDetails(data)\n    })\n  }, [])\n\n  return (\n    <>\n      <Helmet>\n        <title>View Survey</title>\n      </Helmet>\n      <PageTitleWrapper>\n        <PageTitle\n          heading=\"View Survey\"\n          subHeading=\"View survey dependeing on your demography and targeting options.\"\n          noButton={true}\n        />\n      </PageTitleWrapper>\n      <form>\n        <Container maxWidth=\"lg\">\n          <Grid\n            container\n            direction=\"row\"\n            justifyContent=\"center\"\n            alignItems=\"stretch\"\n            spacing={3}\n          >\n            <Grid item xs={12}>\n              <Card>\n                <Grid\n                  direction=\"row\"\n                  justifyContent=\"space-between\"\n                  alignItems=\"stretch\"\n                  display=\"flex\"\n                >\n                  <CardHeader title=\"Survey Details\" />\n                  <Button\n                    sx={{ margin: 1 }} variant=\"contained\" color=\"primary\" type=\"button\"\n                    onClick={() => {\n                      // saveSelectedSurveyContents(survey)\n                      navigate(routes.SURVEY.SINGLE_SURVEY_CONTENTS.ROUTE, { replace: true })}}\n                  >\n                    <ViewIcon fontSize=\"small\" />\n                    View Survey Question\n                  </Button>\n                </Grid>\n                <Divider />\n                <CardContent>\n                  <Box\n                    component=\"data\"\n                    sx={{\n                      '& .MuiTextField-root': { m: 1, width: '25ch' },\n                    }}\n                  >\n                    <div>\n                      <TextField\n                        id=\"outlined-helperText\"\n                        label=\"Title\"\n                        disabled\n                        value={surveyDetails.title}\n                      />\n                      <TextField\n                        id=\"outlined-select-currency\"\n                        select\n                        label=\"Select Survey Type\"\n                        disabled\n                        value={surveyDetails.surveyType}\n                      >\n                        {Object.values(ISurveyType).map((option) => (\n                          <MenuItem key={option} value={option}>\n                            {option}\n                          </MenuItem>\n                        ))}\n                      </TextField>\n                      <br />\n                      <TextField\n                        id=\"outlined-helperText\"\n                        label=\"Description\"\n                        style={{\n                          width: 800,\n                          height: 100\n                        }}\n                        disabled\n                        value={surveyDetails.description}\n                      />\n                      <CardHeader title=\"Person Specifications\" />\n                      <Divider />\n                      <div>\n                        <TextField\n                          id=\"outlined-select-gender\"\n                          select\n                          label=\"Select Gender\"\n                          disabled\n                          value={surveyDetails.gender}\n                        >\n                          {genderTypes.map((option) => (\n                            <MenuItem key={option} value={option}>\n                              {option}\n                            </MenuItem>\n                          ))}\n                        </TextField>\n                        <TextField\n                          id=\"outlined-select-min-age\"\n                          label=\"Select Min Age\"\n                          type=\"number\"\n                          disabled\n                          value={surveyDetails.ageLimit.min}\n                        >\n                        </TextField>\n                        <TextField\n                          type=\"number\"\n                          id=\"outlined-select-max-age\"\n                          label=\"Select Max Age\"\n                          value={surveyDetails.ageLimit.min}\n                          disabled\n                        >\n                        </TextField>\n                      </div>\n                    </div>\n                  </Box>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item xs={12}>\n              <Card>\n                <CardHeader title=\"Your Demography\" />\n                <Divider />\n                <CardContent>\n                  <Box\n                    sx={{\n                      '& .MuiTextField-root': { m: 1, width: '25ch' },\n                    }}\n                  >\n                    <div>\n                      <div aria-label=\"country-input\">\n                        {surveyDetails.demographicDetails.country.map((value, idx) => (\n                          <TextField\n                            id=\"outlined-select-country\"\n                            select\n                            label=\"Select Country\"\n                            value={value}\n                            disabled\n                          >\n                            {demographyData.countries.map((option) => (\n                              <MenuItem key={option} value={option}>\n                                {option}\n                              </MenuItem>\n                            ))}\n                          </TextField>\n                        ))}\n                      </div>\n                      <div aria-label=\"region-input\">\n                        {surveyDetails.demographicDetails.region.map((value, idx) => (\n                          <TextField\n                            id=\"outlined-select-region\"\n                            select\n                            label=\"Select Region\"\n                            value={value}\n                            disabled\n                          >\n                            {demographyData.regions.map((option) => (\n                              <MenuItem key={option} value={option}>\n                                {option}\n                              </MenuItem>\n                            ))}\n                          </TextField>\n                        ))}\n                      </div>\n                      <div aria-label=\"zone-input\">\n                        {surveyDetails.demographicDetails.zone.map((value, idx) => (\n                          <TextField\n                            id=\"outlined-select-zone\"\n                            select\n                            label=\"Select Zone\"\n                            value={value}\n                            disabled\n                          >\n                            {demographyData.zones.map((option) => (\n                              <MenuItem key={option} value={option}>\n                                {option}\n                              </MenuItem>\n                            ))}\n                          </TextField>\n                        ))}\n                      </div>\n                    </div>\n                  </Box>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item xs={12}>\n              <Card>\n                <CardHeader title=\"Your Targeting Options\" />\n                <Divider />\n                <CardContent>\n                  <Box\n                    sx={{\n                      '& .MuiTextField-root': { m: 1, width: '25ch' },\n                    }}\n                  >\n                    <div>\n                      <div aria-label=\"education-input\">\n                        {surveyDetails.targetingOptions.education.map((value, idx) => (\n                          <TextField\n                            id=\"outlined-select-education\"\n                            select\n                            label=\"Select Education\"\n                            value={value}\n                            disabled\n                          >\n                            {targetingOptionsData.education.map((option) => (\n                              <MenuItem key={option} value={option}>\n                                {option}\n                              </MenuItem>\n                            ))}\n                          </TextField>\n                        ))}\n                      </div>\n                      <div aria-label=\"employment-status-input\">\n                        {surveyDetails.targetingOptions.employmentStatus.map((value, idx) => (\n                          <TextField\n                            id=\"outlined-select-employment-status\"\n                            select\n                            label=\"Select Employment Status\"\n                            value={value}\n                            disabled\n                          >\n                            {targetingOptionsData.employementStatus.map((option) => (\n                              <MenuItem key={option} value={option}>\n                                {option}\n                              </MenuItem>\n                            ))}\n                          </TextField>\n                        ))}\n                      </div>\n                      <div aria-label=\"industry-input\">\n                        {surveyDetails.targetingOptions.industry.map((value, idx) => (\n                          <TextField\n                            id=\"outlined-select-industry\"\n                            select\n                            label=\"Select Industry\"\n                            value={value}\n                            disabled\n                          >\n                            {targetingOptionsData.industry.map((option) => (\n                              <MenuItem key={option} value={option}>\n                                {option}\n                              </MenuItem>\n                            ))}\n                          </TextField>\n                        ))}\n                      </div>\n                      <div aria-label=\"parental-status-input\">\n                        {surveyDetails.targetingOptions.parentalStatus.map((value, idx) => (\n                          <TextField\n                            id=\"outlined-select-parental-status\"\n                            select\n                            label=\"Select Parental Status\"\n                            value={value}\n                            disabled\n                          >\n                            {targetingOptionsData.parentalStatus.map((option) => (\n                              <MenuItem key={option} value={option}>\n                                {option}\n                              </MenuItem>\n                            ))}\n                          </TextField>\n                        ))}\n                      </div>\n                      <div aria-label=\"maritial-status-input\">\n                        {surveyDetails.targetingOptions.martialStatus.map((value, idx) => (\n                          <TextField\n                            id=\"outlined-select-maritial-status\"\n                            select\n                            label=\"Select Maritial Status\"\n                            value={value}\n                            disabled\n                          >\n                            {targetingOptionsData.maritialStatus.map((option) => (\n                              <MenuItem key={option} value={option}>\n                                {option}\n                              </MenuItem>\n                            ))}\n                          </TextField>\n                        ))}\n                      </div>\n                    </div>\n                  </Box>\n                </CardContent>\n              </Card>\n            </Grid>\n          </Grid>\n        </Container>\n      </form>\n    </>\n  )\n}\n\nconst mapStateToProps = (state: any) => ({\n  selectedSurvey: selectSelectedSurvey(state)\n})\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  saveSelectedSurveyContents: (data: any) => dispatch(Actions.saveSelectedSurveyContents(data)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateSurvey)"],"sourceRoot":""}