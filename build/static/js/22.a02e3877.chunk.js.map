{"version":3,"sources":["components/PageTitleWrapper/index.tsx","components/Footer/index.tsx","../node_modules/@mui/icons-material/AddTwoTone.js","../node_modules/@mui/icons-material/MoreVertTwoTone.js","../node_modules/@mui/icons-material/Visibility.js","store/States/Helpers/response.types.ts","my/components/Label/index.tsx","store/States/Notification/queries.ts","store/States/Notification/actions.ts","../node_modules/@mui/material/DialogContentText/dialogContentTextClasses.js","../node_modules/@mui/material/DialogContentText/DialogContentText.js","../node_modules/@mui/material/DialogActions/dialogActionsClasses.js","../node_modules/@mui/material/DialogActions/DialogActions.js","pages/Notification/PageHeader.tsx","pages/Notification/BulkActions.tsx","pages/Notification/RecentNotificationsTable.tsx","pages/Notification/RecentNotifications.tsx","pages/Notification/index.tsx"],"names":["PageTitle","styled","Box","theme","spacing","PageTitleWrapper","children","maxWidth","FooterWrapper","Footer","py","display","xs","md","alignItems","textAlign","justifyContent","variant","sx","pt","href","target","rel","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","ResponseType","LabelWrapper","colors","alpha","black","typography","pxToRem","general","borderRadius","primary","lighter","palette","main","secondary","success","warning","error","info","Label","className","color","rest","AddNotificationBody","input","query","content","title","description","images","map","item","targeted_users","removeNotificationBody","_id","createNotification","callback","err","data","Axios","post","endPoints","baseURL","then","res","catch","console","log","removeOneNotification","FetchNotificationsDoc","headers","getDialogContentTextUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","DialogContentTextRoot","Typography","shouldForwardProp","prop","rootShouldForwardProp","name","overridesResolver","props","styles","root","DialogContentText","React","inProps","ref","useThemeProps","ownerState","_objectWithoutPropertiesLoose","classes","composedClasses","composeClasses","_extends","useUtilityClasses","_jsx","component","getDialogActionsUtilityClass","DialogActionsRoot","disableSpacing","padding","flex","marginLeft","DialogActions","other","slots","clsx","PageHeader","navigate","useNavigate","Grid","container","gutterBottom","Button","mt","startIcon","fontSize","onClick","routes","ADMIN","CREATE_NOTIFICATION","ROUTE","replace","ButtonError","contrastText","dark","BulkActions","useState","menuOpen","moreRef","useRef","selectedIDs","ml","IconButton","p","connect","state","notifications","selectNotifications","dispatch","SetNotifications","payload","Actions","setNotifications","selectedNotifications","setSelectedNotifications","selectedBulkActions","length","page","setPage","limit","setLimit","deleteNotification","setDeleteNotification","notification","setNotification","openDetailModal","setOpenDetailModal","fullWidth","selectedSomeNotifications","selectedAllNotifications","useTheme","paginatedNotifications","slice","applyPagination","useMediaQuery","breakpoints","down","useEffect","useForm","register","handleSubmit","formState","errors","openAlert","setOpenAlert","handleCloseAlert","handleCloseDetailModal","Fragment","Dialog","open","onClose","DialogTitle","fontWeight","DialogContent","marginTop","sender","first_name","last_name","id","__typename","ValidationError","INotificationSimple","autoFocus","Card","Divider","TableContainer","Table","TableHead","TableRow","TableCell","Checkbox","checked","indeterminate","onChange","event","push","align","TableBody","isNotificationSelected","includes","hover","selected","notificationId","prevSelected","filter","noWrap","Tooltip","arrow","handleClickOpenDetailModal","size","handleShowAlertModal","background","TablePagination","count","onPageChange","newPage","onRowsPerPageChange","parseInt","rowsPerPage","rowsPerPageOptions","RecentNotifications","selectAuth","isAuthenticated","Container","direction"],"mappings":"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","file":"static/js/22.a02e3877.chunk.js","sourcesContent":["import { FC, ReactNode } from 'react';\nimport { Container } from '@mui/material';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/material/styles';\nimport { Box } from '@mui/material';\n\nconst PageTitle = styled(Box)(\n  ({ theme }) => `\n        padding: ${theme.spacing(4, 0)};\n`\n);\n\ninterface PageTitleWrapperProps {\n  children?: ReactNode;\n}\n\nconst PageTitleWrapper: FC<PageTitleWrapperProps> = ({ children }) => {\n  return (\n    <>\n      <PageTitle>\n        <Container maxWidth=\"lg\">\n          {children}\n        </Container>\n      </PageTitle>\n    </>\n  );\n};\n\nPageTitleWrapper.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default PageTitleWrapper;\n","import { Box, Container, Link, Typography } from '@mui/material';\nimport { styled } from '@mui/material/styles';\n\nconst FooterWrapper = styled(Box)(\n  ({ theme }) => `\n        border-radius: 0;\n        margin: ${theme.spacing(3)} 0;\n`\n);\n\nfunction Footer() {\n  return (\n    <FooterWrapper>\n      <Container maxWidth=\"lg\">\n        <Box\n          py={3}\n          display={{ xs: 'block', md: 'flex' }}\n          alignItems=\"center\"\n          textAlign={{ xs: 'center', md: 'left' }}\n          justifyContent=\"space-between\"\n        >\n          <Box>\n            <Typography variant=\"subtitle1\">\n              &copy; 2021 - Tokyo Free White React Admin Dashboard\n            </Typography>\n          </Box>\n          <Typography sx={{ pt: { xs: 2, md: 0 } }} variant=\"subtitle1\">\n            Crafted by <Link href=\"https://bloomui.com\" target=\"_blank\" rel=\"noopener noreferrer\">BloomUI.com</Link>\n          </Typography>\n        </Box>\n      </Container>\n    </FooterWrapper>\n  );\n}\n\nexport default Footer;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'AddTwoTone');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreVertTwoTone');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\n\nexports.default = _default;","// const for response types\nexport enum ResponseType {\n  \"ValidationErrors\" = \"ValidationErrors\",\n  \"ValidationError\" = \"ValidationError\",\n  \"ICategorySimple\" = \"ICategorySimple\",\n  \"IPriceSimple\" = \"IPriceSimple\",\n  \"IPriceDoc\" = \"IPriceDoc\",\n  \"IAccountSimple\" = \"IAccountSimple\",\n  \"IGroupDoc\" = \"IGroupDoc\",\n  \"IGroupSimple\" = \"IGroupSimple\",\n  \"INotificationDoc\" = \"INotificationDoc\",\n  \"INotificationSimple\" = \"INotificationSimple\",\n  \"INewsSimple\" = \"INewsSimple\"\n};","import { FC, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/material/styles';\n\ninterface LabelProps {\n  className?: string;\n  color?: 'primary' | 'secondary' | 'error' | 'warning' | 'success' | 'info';\n  children?: ReactNode;\n}\n\nconst LabelWrapper = styled('span')(\n  ({ theme }) => `\n      background-color: ${theme.colors.alpha.black[5]};\n      padding: ${theme.spacing(0.5, 1)};\n      font-size: ${theme.typography.pxToRem(13)};\n      border-radius: ${theme.general.borderRadius};\n      display: inline-flex;\n      align-items: center;\n      justify-content: center;\n      max-height: ${theme.spacing(3)};\n      \n      &.MuiLabel {\n        &-primary {\n          background-color: ${theme.colors.primary.lighter};\n          color: ${theme.palette.primary.main}\n        }\n        \n        &-secondary {\n          background-color: ${theme.colors.secondary.lighter};\n          color: ${theme.palette.secondary.main}\n        }\n        \n        &-success {\n          background-color: ${theme.colors.success.lighter};\n          color: ${theme.palette.success.main}\n        }\n        \n        &-warning {\n          background-color: ${theme.colors.warning.lighter};\n          color: ${theme.palette.warning.main}\n        }\n              \n        &-error {\n          background-color: ${theme.colors.error.lighter};\n          color: ${theme.palette.error.main}\n        }\n        \n        &-info {\n          background-color: ${theme.colors.info.lighter};\n          color: ${theme.palette.info.main}\n        }\n      }\n`\n);\n\nconst Label: FC<LabelProps> = ({\n  className = '',\n  color = 'secondary',\n  children,\n  ...rest\n}) => {\n  return (\n    <LabelWrapper className={'MuiLabel-' + color} {...rest}>\n      {children}\n    </LabelWrapper>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: PropTypes.oneOf([\n    'primary',\n    'secondary',\n    'error',\n    'warning',\n    'success',\n    'info'\n  ])\n};\n\nexport default Label;\n","import { IBasicID } from \"../Common/types\"\nimport { INotificationInput } from \"./notification.types\";\n\n// create a notification\nexport const AddNotificationBodyTag = \"createNotification\"\n\nexport const AddNotificationBody = (input: INotificationInput) => ({\n  query: `mutation {\n    createNotification(input: {\n      content: {\n        title: \"${input.content.title}\"\n        description: \"${input.content.description}\"\n        images: [${input.content.images.map(item => `\"${item}\"`)}]\n      }\n      targeted_users: [${input.targeted_users.map(item => `\"${item}\"`)}]\n    }) {\n      ...on ValidationError {\n        error_path\n      }\n      ...on INotificationSimple {\n        _id\n        content { title description }\n        targeted_users\n        images\n      }\n    }\n  }`\n})\n\nexport const createNotificationTag = \"createNotification\"\n\nexport const createNotificationBody = ({ content, targeted_users }: INotificationInput) => ({\n  query: `mutation {\n    createNotification(input:{content:{ title:\"${content.title}\", description: \"${content.description}\"}, targeted_users:[${targeted_users}]}) {\n      __typename\n      ... on INotificationSimple{\n      _id content {title description images} targeted_users sender createdAt updatedAt   \n       }\n      ... on ValidationError {\n        error_path errors {\n          error_code error_message\n        }\n      }\n    }\n  }`\n});\n\n// fetch all notifications\nexport const fetchNotificationsDocTag = \"fetchNotificationsDoc\";\n\nexport const fetchNotificationsDoc = () => ({\n  query: `{\n    fetchNotificationsDoc{\n          _id price  minimum_user priority type maximum_user_purchase_amount banned_reason users ActiveUsersCount updatedAt createdAt\n    }\n  }`\n});\n\n// // edit notification\n// export const editGroupTag = \"editGroup\";\n\n// export const editGroupBody = ({ _id, price, priority, minimum_user, maximum_user_purchase_amount, type }: IGroupEdit) => ({\n//   query: `mutation {\n//     editGroup(input:{_id: \"${_id}\", price: \"${price}\", priority: \"${priority}\", minimum_user:  ${minimum_user}, maximum_user_purchase_amount: \"${maximum_user_purchase_amount}\", type: ${type}}) {\n//       __typename\n//       ... on IGroupSimple{\n//           _id price  minimum_user priority type maximum_user_purchase_amount banned_reason users ActiveUsersCount updatedAt createdAt\n//       }\n//       ... on ValidationError {\n//         error_path errors {\n//           error_code error_message\n//         }\n//       }\n//       ... on ValidationErrors {\n//         validation_errors {\n//           error_path errors {\n//             error_message error_code\n//           }\n//         }\n//       }\n//     }\n//   }`\n// });\n\n//remove notification\nexport const removeNotificationTag = \"removeNotificationByID\";\n\nexport const removeNotificationBody = ({ _id }: IBasicID) => ({\n  query: `mutation {\n    removeNotificationByID(_id: \"${_id}\") {\n      __typename\n      ... on INotificationSimple{\n      _id content {title description images} targeted_users sender createdAt updatedAt   \n       }\n      ... on ValidationError {\n        error_path errors {\n          error_code error_message\n        }\n      }\n    }\n  }`\n})\n\n//fetch group\nexport const fetchGroupByIDTag = \"fetchOneGroupByID\";\n\nexport const fetchGroupByIDBody = ({ _id }: IBasicID) => ({\n  query: `{\n    fetchOneGroupByID(_id: \"${_id}\") {\n      __typename\n      ... on IGroupSimple{\n          _id first_name  last_name phone_number email role is_active updatedAt createdAt\n       }\n      ... on ValidationError {\n        error_path errors {\n          error_code error_message\n        }\n      }\n    }\n  }`\n})\n\nexport const FetchNotificationsDocBody = () => ({\n  query: `{\n    fetchNotificationsDoc{\n      _id content {title description images} targeted_users sender{first_name last_name _id phone_number email role is_active} createdAt updatedAt   \n    }\n  }`\n});","import Axios from \"axios\"\nimport endPoints from \"src/constants/endPoints\"\nimport { fetchGroupByIDTag, fetchGroupByIDBody, FetchNotificationsDocBody, removeNotificationBody, removeNotificationTag, createNotificationBody, createNotificationTag, AddNotificationBody, AddNotificationBodyTag } from \"./queries\"\nimport { IBasicID } from \"../Common/types\"\nimport { INotificationInput } from \"./notification.types\";\n\n// create notification\nexport const createNotification = (input: INotificationInput, callback = (err: any, data: any) => null) => {\n  Axios.post(endPoints.baseURL, AddNotificationBody(input))\n    .then(res => {\n      callback(null, res.data.data[AddNotificationBodyTag])\n    })\n    .catch(err => console.log(\"Error\", err))\n}\n\n// export const createNotification = async (input: INotificationInput, callback = (err: any, data: any) => null) => {\n//   // format data for sending data.\n//   console.log('lol', input.content.images)\n//   input.targeted_users = input.targeted_users.map(value => `\"${value}\"`);\n//   for (let i = 0; i < input.content.images.length; ++i) {\n//     formData.append('image', input.content.images[i]);\n//   }\n//   formData.append('description', input.content.description)\n//   formData.append('title', input.content.title)\n//   formData.append('targeted_users', input.targeted_users.toLocaleString())\n//   // send data to server.\n//   try {\n//     const response = await Axios.post(`${endPoints.url}notifications`, formData, {\n//       headers: {\n//         'Content-Type': 'multipart/form-data'\n//       }\n//     });\n//     callback(null, response.data)\n//   } catch (error) {\n//     console.log(error);\n//     callback(error, null)\n//   }\n// }\n// // edit notification\n// export const editGroup = (({ _id, price, priority, minimum_user, maximum_user_purchase_amount, type }: IGroupEdit, callback = (err: any, data: any) => null) => {\n//   Axios.post(endPoints.baseURL, editGroupBody({ _id, price, priority, minimum_user, maximum_user_purchase_amount, type } as IGroupEdit))\n//     .then(res => {\n//       console.log(res.data.data)\n//       callback(null, res.data.data[editGroupTag])\n//     })\n//     .catch(err => console.log(\"Error\", err))\n// })\n\n// remove notification\nexport const removeOneNotification = (({ _id }: IBasicID, callback = (err: any, data: any) => null) => {\n  Axios.post(endPoints.baseURL, removeNotificationBody({ _id }))\n    .then(res => {\n      callback(null, res.data.data[removeNotificationTag])\n    })\n    .catch(err => console.log(\"Error\", err))\n});\n\n// fetch notification by Id\nexport const fectchGroupByID = (({ _id }: IBasicID, callback = (err: any, data: any) => null) => {\n  Axios.post(endPoints.baseURL, fetchGroupByIDBody({ _id }))\n    .then(res => {\n      callback(null, res.data.data[fetchGroupByIDTag])\n    })\n    .catch(err => console.log(\"Error\", err))\n});\n\nexport const FetchNotificationDocTag = \"fetchNotificationsDoc\"\n\nexport const FetchNotificationsDoc = (callback = (err: any, data: any, headers) => null) => {\n  Axios.post(endPoints.baseURL, FetchNotificationsDocBody())\n    .then((res: { data: { data: { [x: string]: any; }; }; }) => {\n      console.log(res.data.data);\n      callback(null, res.data.data[FetchNotificationDocTag], res)\n    })\n    .catch(err => console.log(\"Error\", err))\n};","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getDialogContentTextUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogContentText', slot);\n}\nconst dialogContentTextClasses = generateUtilityClasses('MuiDialogContentText', ['root']);\nexport default dialogContentTextClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport { getDialogContentTextUtilityClass } from './dialogContentTextClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  const composedClasses = composeClasses(slots, getDialogContentTextUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst DialogContentTextRoot = styled(Typography, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiDialogContentText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\nconst DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogContentText'\n  });\n\n  const ownerState = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogContentTextRoot, _extends({\n    component: \"p\",\n    variant: \"body1\",\n    color: \"text.secondary\",\n    ref: ref,\n    ownerState: ownerState\n  }, props, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default DialogContentText;","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getDialogActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogActions', slot);\n}\nconst dialogActionsClasses = generateUtilityClasses('MuiDialogActions', ['root', 'spacing']);\nexport default dialogActionsClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"disableSpacing\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogActionsUtilityClass } from './dialogActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableSpacing\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getDialogActionsUtilityClass, classes);\n};\n\nconst DialogActionsRoot = styled('div', {\n  name: 'MuiDialogActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8,\n  justifyContent: 'flex-end',\n  flex: '0 0 auto'\n}, !ownerState.disableSpacing && {\n  '& > :not(:first-of-type)': {\n    marginLeft: 8\n  }\n}));\nconst DialogActions = /*#__PURE__*/React.forwardRef(function DialogActions(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogActions'\n  });\n\n  const {\n    className,\n    disableSpacing = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    disableSpacing\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogActions.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default DialogActions;","import { Typography, Button, Grid } from '@mui/material';\nimport AddTwoToneIcon from '@mui/icons-material/AddTwoTone';\nimport { useNavigate } from 'react-router';\nimport routes from 'src/constants/routes'\n\nfunction PageHeader() {\n  const navigate = useNavigate();\n  \n  return (\n    <Grid container justifyContent=\"space-between\" alignItems=\"center\">\n      <Grid item>\n        <Typography variant=\"h3\" component=\"h3\" gutterBottom>\n          Notification\n        </Typography>\n      </Grid>\n      <Grid item>\n        <Button\n          sx={{ mt: { xs: 2, md: 0 } }}\n          variant=\"contained\"\n          startIcon={<AddTwoToneIcon fontSize=\"small\" />}\n          onClick={() => {\n            navigate(routes.ADMIN.CREATE_NOTIFICATION.ROUTE, { replace: false });\n          }}\n        >\n          Create Notification\n        </Button>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default PageHeader;","import { useState, useRef } from 'react';\n\nimport {\n  Box,\n  Menu,\n  IconButton,\n  Button,\n  ListItemText,\n  ListItem,\n  List,\n  Typography\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\n\nimport DeleteTwoToneIcon from '@mui/icons-material/DeleteTwoTone';\nimport MoreVertTwoToneIcon from '@mui/icons-material/MoreVertTwoTone';\nimport { selectedIDs } from './RecentNotificationsTable';\n\nconst ButtonError = styled(Button)(\n  ({ theme }) => `\n     background: ${theme.colors.error.main};\n     color: ${theme.palette.error.contrastText};\n\n     &:hover {\n        background: ${theme.colors.error.dark};\n     }\n    `\n);\n\nfunction BulkActions() {\n  const [onMenuOpen, menuOpen] = useState<boolean>(false);\n  const moreRef = useRef<HTMLButtonElement | null>(null);\n\n  const openMenu = (): void => {\n    menuOpen(true);\n  };\n\n  const closeMenu = (): void => {\n    menuOpen(false);\n  };\n\n  const deactivateAccounts = (): void => {\n    console.log(\"delet all\", selectedIDs)\n  }\n  return (\n    <>\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n        <Box display=\"flex\" alignItems=\"center\">\n          <Typography variant=\"h5\" color=\"text.secondary\">\n            Bulk actions:\n          </Typography>\n          <ButtonError\n            onClick={deactivateAccounts}\n            sx={{ ml: 1 }}\n            startIcon={<DeleteTwoToneIcon />}\n            variant=\"contained\"\n          >\n            Deactivate\n          </ButtonError>\n        </Box>\n        <IconButton\n          color=\"primary\"\n          onClick={openMenu}\n          ref={moreRef}\n          sx={{ ml: 2, p: 1 }}\n        >\n          <MoreVertTwoToneIcon />\n        </IconButton>\n      </Box>\n\n      {/* <Menu\n        keepMounted\n        anchorEl={moreRef.current}\n        open={onMenuOpen}\n        onClose={closeMenu}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'center'\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'center'\n        }}\n\n      >\n        <List sx={{ p: 1 }} component=\"nav\">\n          <ListItem button>\n            <ListItemText primary=\"Bulk delete selected\" />\n          </ListItem>\n          <ListItem button>\n            <ListItemText primary=\"Bulk edit selected\" />\n          </ListItem>\n        </List>\n      </Menu> */}\n    </>\n  );\n}\n\nexport default BulkActions;\n","import { ChangeEvent, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Tooltip, Divider, Box, Card, Checkbox, IconButton, Table, useTheme, Typography,\n  TableBody, TableCell, TableHead, TablePagination, TableRow, TableContainer, Button,\n  Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, DialogProps,\n} from '@mui/material';\nimport EditTwoToneIcon from '@mui/icons-material/EditTwoTone';\nimport DeleteTwoToneIcon from '@mui/icons-material/DeleteTwoTone';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport BulkActions from './BulkActions';\nimport { connect } from 'react-redux'\nimport { Actions, selectNotifications } from 'src/store/States/Notification';\nimport { INotificationDoc } from 'src/store/States/Notification/notification.types';\nimport { useForm } from 'react-hook-form';\nimport { ResponseType } from 'src/store/States/Helpers/response.types';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { useNavigate } from 'react-router';\nimport Label from 'src/my/components/Label';\nimport { FetchNotificationsDoc, removeOneNotification } from 'src/store/States/Notification/actions';\nimport React from 'react';\nimport { INewsDoc } from 'src/store/States/News/news.types';\n\nexport let selectedIDs = [];\n\n\nconst RecentNotificationsTable = (props: any) => {\n  const navigate = useNavigate();\n\n  const [notifications, setNotifications] = useState([]);\n  const [notificationNameError, setNotificationNameError] = useState(null);\n  const [selectedNotifications, setSelectedNotifications] = useState<string[]>(\n    []\n  );\n  const selectedBulkActions = selectedNotifications.length > 0;\n  const [page, setPage] = useState<number>(0);\n  const [limit, setLimit] = useState<number>(5);\n  const [deleteNotification, setDeleteNotification] = useState(null)\n  const [notification, setNotification] = useState(null)\n  const [openDetailModal, setOpenDetailModal] = React.useState(false);\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState<DialogProps['maxWidth']>('sm'); const applyPagination = (\n    notifications: INotificationDoc[],\n    page: number,\n    limit: number\n  ): INotificationDoc[] => {\n    return notifications.slice(page * limit, page * limit + limit);\n  };\n  const selectedSomeNotifications =\n    selectedNotifications.length > 0 &&\n    selectedNotifications.length < notifications.length;\n  const selectedAllNotifications =\n    selectedNotifications.length === notifications.length;\n  const theme = useTheme();\n  const paginatedNotifications = applyPagination(\n    notifications,\n    page,\n    limit\n  );\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'));\n\n  // fetch notifications at start up.\n  useEffect(() => {\n    FetchNotificationsDoc((error: any, data: any) => {\n      props.SetNotifications(data)\n      setNotifications(data)\n    });\n  }, []);\n\n\n  // select all notifications check box\n  const handleSelectAllNotifications = (\n    event: ChangeEvent<HTMLInputElement>\n  ): void => {\n    setSelectedNotifications(\n      event.target.checked\n        ? notifications.map((notification) => notification._id)\n        : []\n    );\n    selectedIDs.push(selectedNotifications);\n  };\n\n  // check one notification check box.\n  const handleSelectOneNotification = (\n    event: ChangeEvent<HTMLInputElement>,\n    notificationId: string\n  ): void => {\n    if (!selectedNotifications.includes(notificationId)) {\n      setSelectedNotifications((prevSelected) => [\n        ...prevSelected,\n        notificationId\n      ]);\n    } else {\n      setSelectedNotifications((prevSelected) =>\n        prevSelected.filter((id) => id !== notificationId)\n      );\n    }\n  };\n\n  const handlePageChange = (event: any, newPage: number): void => {\n    setPage(newPage);\n  };\n\n  const handleLimitChange = (event: ChangeEvent<HTMLInputElement>): void => {\n    setLimit(parseInt(event.target.value));\n  };\n\n  // delete notification\n  const handleDeleteNotification = () => {\n    removeOneNotification({ _id: deleteNotification!._id }, (error, data) => {\n      switch (data.__typename) {\n        case ResponseType.ValidationError:\n          console.log(\"data base error\", data);\n          break;\n        case ResponseType.INotificationSimple:\n          FetchNotificationsDoc((error: any, data: any) => {\n            props.SetNotifications(data)\n            setNotifications(data)\n          });\n          break;\n      }\n    });\n    handleCloseAlert()\n  }\n\n  //edit notification form\n  const { register: registerEdit, handleSubmit: handleEditSubmit, formState: { errors: notificationEditErrors } } = useForm();\n\n  const [openAlert, setOpenAlert] = useState(false);\n  const [openModal, setOpenModal] = useState(false);\n\n  const handleShowAlertModal = (notification: INotificationDoc) => {\n    setDeleteNotification(notification);\n    setOpenAlert(true);\n  };\n\n  const handleCloseAlert = () => {\n    setOpenAlert(false);\n  };\n\n  const getStatusLabel = (notification: INotificationDoc): JSX.Element => {\n    const map = {\n      DeActivated: {\n        text: 'DeActivated',\n        color: 'error'\n      },\n      Active: {\n        text: 'Active',\n        color: 'success'\n      },\n    };\n    const { text, color }: any = notification._id === null ? map.Active : map.DeActivated;\n\n    return <Label color={color}>{text}</Label>;\n  };\n\n  const handleClickOpenDetailModal = (notification: INotificationDoc) => {\n    setNotification(notification)\n    setOpenDetailModal(true); console.log(notification);\n  };\n\n  const handleCloseDetailModal = () => {\n    setOpenDetailModal(false);\n  };\n\n  return (\n    <>\n      {/* start detail modal */}\n      <React.Fragment>\n        <Dialog\n          fullWidth={fullWidth}\n          maxWidth={maxWidth}\n          open={openDetailModal}\n          onClose={handleCloseDetailModal}\n        >\n          <DialogTitle sx={{ fontWeight: 'bold', fontSize: 'h2.fontSize' }}>{notification !== null ? notification.content.title : \"\"}</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              {notification !== null ? notification.content.description : \"\"}\n            </DialogContentText>\n            <Box sx={{ marginTop: 2 }}>\n              <Label color=\"primary\">\n                <Box sx={{ fontWeight: 'bold' }} component=\"span\" display=\"inline\">\n                  {notification ? `sender:   ${notification.sender.first_name} ${notification.sender.last_name}` : \"\"}\n                </Box>\n              </Label>\n            </Box>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleCloseDetailModal}>Close</Button>\n          </DialogActions>\n        </Dialog>\n      </React.Fragment>\n      {/* end detail modal */}\n\n      {/* start alert dialog box for delete notification */}\n      <Dialog open={openAlert} onClose={handleCloseAlert}>\n        <DialogTitle ><Box sx={{ fontWeight: 'bold' }} component=\"span\" display=\"inline\">Alert</Box></DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Are you sure you want to delete <Label color=\"primary\"> <Box sx={{ fontWeight: 'bold', }} component=\"span\" display=\"inline\">{deleteNotification ? `${deleteNotification.content.title}` : \"\"}</Box></Label> Notification?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseAlert}>Cancel</Button>\n          <Button onClick={handleDeleteNotification} color=\"error\" autoFocus>\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {/* end of alert dialog*/}\n\n      <Card>\n        {selectedBulkActions && (\n          <Box flex={1} p={2}>\n            <BulkActions />\n          </Box>\n        )}\n        <Divider />\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    color=\"primary\"\n                    checked={selectedAllNotifications}\n                    indeterminate={selectedSomeNotifications}\n                    onChange={handleSelectAllNotifications} />\n                </TableCell>\n                <TableCell>Title</TableCell>\n                <TableCell>Sender</TableCell>\n                <TableCell align=\"center\">Detail</TableCell>\n                <TableCell align=\"center\">Actions</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {paginatedNotifications.map((notification) => {\n                const isNotificationSelected = selectedNotifications.includes(\n                  notification._id\n                );\n                return (\n                  <TableRow\n                    hover\n                    key={notification._id}\n                    selected={isNotificationSelected}\n                  >\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        color=\"primary\"\n                        checked={isNotificationSelected}\n                        onChange={(event: ChangeEvent<HTMLInputElement>) => handleSelectOneNotification(event, notification._id)}\n                        value={isNotificationSelected} />\n                    </TableCell>\n\n                    <TableCell>\n                      <Typography\n                        variant=\"body1\"\n                        fontWeight=\"bold\"\n                        color=\"text.primary\"\n                        gutterBottom\n                        noWrap\n                      >\n                        {notification.content.title}\n                      </Typography>\n                    </TableCell>\n                    <TableCell>\n                      <Typography\n                        variant=\"body1\"\n                        fontWeight=\"bold\"\n                        color=\"text.primary\"\n                        gutterBottom\n                        noWrap\n                      >\n                        {`${notification.sender.first_name} ${notification.sender.last_name}`}\n                      </Typography>\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      <Tooltip title=\"Show Detail\" arrow>\n                        <IconButton\n                          onClick={() => handleClickOpenDetailModal(notification)}\n                          size=\"medium\"\n                        >\n                          <VisibilityIcon fontSize=\"medium\" />\n                        </IconButton>\n                      </Tooltip>\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      {/* <Tooltip title=\"Edit Notification\" arrow>\n                        <IconButton\n                          onClick={() => {\n                            navigate(`/notifications/${notification._id}`, { replace: false });\n                          }}\n                          sx={{\n                            '&:hover': {\n                              background: theme.colors.primary.lighter\n                            },\n                            color: theme.palette.primary.main\n                          }}\n                          color=\"inherit\"\n                          size=\"small\"\n                        >\n                          <EditTwoToneIcon fontSize=\"small\" />\n                        </IconButton>\n                      </Tooltip> */}\n                      <Tooltip title=\"Delete Notification\" arrow>\n                        <IconButton\n                          onClick={() => {\n\n                            handleShowAlertModal(notification);\n                          }}\n                          sx={{\n                            '&:hover': { background: theme.colors.error.lighter },\n                            color: theme.palette.error.main\n                          }}\n                          color=\"inherit\"\n                          size=\"small\"\n                        >\n                          <DeleteTwoToneIcon fontSize=\"small\" />\n                        </IconButton>\n                      </Tooltip>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <Box p={2}>\n          <TablePagination\n            component=\"div\"\n            count={notifications.length}\n            onPageChange={handlePageChange}\n            onRowsPerPageChange={handleLimitChange}\n            page={page}\n            rowsPerPage={limit}\n            rowsPerPageOptions={[5, 10, 25, 30]} />\n        </Box>\n      </Card>\n    </>\n  );\n};\n\nRecentNotificationsTable.propTypes = {\n  notifications: PropTypes.array\n};\n\nconst mapStateToProps = (state: any) => ({\n  notifications: selectNotifications(state)\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  SetNotifications: (payload: any) => dispatch(Actions.SetNotifications(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RecentNotificationsTable);\n\n\n\n","import { Card } from '@mui/material';\nimport RecentNotificationsTable from './RecentNotificationsTable';\n\nfunction RecentNotifications() {\n  return (\n    <Card>\n      <RecentNotificationsTable />\n    </Card>\n  );\n\n}\n\nexport default RecentNotifications;\n","import { Helmet } from 'react-helmet-async';\nimport PageHeader from './PageHeader';\nimport PageTitleWrapper from 'src/components/PageTitleWrapper';\nimport { Grid, Container } from '@mui/material';\nimport Footer from 'src/components/Footer';\n\nimport RecentNotifications from './RecentNotifications';\nimport { connect } from 'react-redux';\nimport { useEffect } from 'react';\nimport { useNavigate } from 'react-router';\nimport { selectAuth } from 'src/store/States/Auth/reducer';\n\nfunction Notifications(props: any) {\n  const navigate = useNavigate();\n\n  //// if user is not logged in redirect to login.\n  useEffect(() => {\n    if (!props.isAuthenticated)\n      navigate(\"/login\", { replace: true });\n  }, []);\n\n  return (\n    <>\n      <Helmet>\n        <title>Ethio Lottery</title>\n      </Helmet>\n      <PageTitleWrapper>\n        <PageHeader />\n      </PageTitleWrapper>\n      <Container maxWidth=\"lg\">\n        <Grid\n          container\n          direction=\"row\"\n          justifyContent=\"center\"\n          alignItems=\"stretch\"\n          spacing={3}\n        >\n          <Grid item xs={12}>\n            <RecentNotifications />\n          </Grid>\n        </Grid>\n      </Container>\n      <Footer />\n    </>\n  );\n\n}\n\nconst mapStateToProps = (state: any) => selectAuth(state);\n\nexport default connect(mapStateToProps)(Notifications);\n"],"sourceRoot":""}